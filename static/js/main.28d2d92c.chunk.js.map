{"version":3,"sources":["firebase/config/fbConfig.js","components/layout/SignedInLink.js","store/actions/authActions.js","modals/modalsAction.js","components/layout/SignedOutLink.js","components/layout/Navbar.js","components/dashboard/NotificationMain.js","components/events/EventAtendee.js","util/helpers/helpers.js","components/events/EventInfo.js","components/events/EventsList.js","util/form/TextInput.js","util/form/TextArea.js","util/form/DateInput.js","util/form/SelectInput.js","components/events/createEvent.js","store/actions/eventsAction.js","components/dashboard/Dashboard.js","util/form/RadioInput.js","async/asyncReducer.js","store/actions/userAction.js","components/settings/Basic.js","components/settings/AboutMe.js","components/settings/photos/CropperInput.js","components/settings/photos/DropzoneInput.js","components/settings/photos/UserPhotos.js","components/settings/MyPhotos.js","components/eventDetailed/EventHeader.js","components/eventDetailed/EventAbout.js","components/eventDetailed/EventChat.js","components/eventDetailed/EventSidebar.js","components/layout/NotFound.js","components/eventDetailed/EventDetailed.js","components/profiles/ProfileInfoDesc.js","components/profiles/ProfileInfoEvents.js","components/profiles/ProfileInfoHeader.js","components/profiles/ProfileInfoPhotos.js","components/profiles/ProfileInfoSidebar.js","components/profiles/ProfileInfo.js","components/settings/SettingNav.js","components/settings/Account.js","components/settings/DashboardSetting.js","components/dashboard/Revents.js","test/Test.js","modals/TestModal.js","components/auth/SocialLogin.js","components/auth/LoginForm.js","modals/LoginModal.js","components/auth/RegisterForm.js","modals/RegisterModal.js","modals/ModalsManager.js","App.js","store/reducers/eventsReducer.js","store/reducers/index.js","modals/modalsReducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","settings","timestampInSnapshots","compose","connect","state","user","auth","signOut","dispatch","getState","a","getFirebase","getFirestore","type","console","log","withRouter","history","Menu","Item","position","Image","avatar","spaced","src","photoURL","Dropdown","pointing","text","displayName","as","Link","to","icon","onClick","push","openModal","modalDetails","payload","closeModal","props","Button","content","style","marginLeft","Navbar","inverted","Container","header","NavLink","exact","alt","name","this","uid","React","Component","EventAtendee","attendee","List","id","size","circular","objectToArray","object","Object","entries","map","e","assign","EventInfo","event","Segment","Group","isCancelled","Label","color","ribbon","hostPhotoURL","Content","Header","title","Description","hostedUid","hostedBy","Icon","format","date","toDate","address","secondary","horizontal","attendees","clearing","description","floated","EventsList","renderEvents","events","TextInput","input","placeholder","meta","error","touched","Form","Field","basic","rows","TextArea","DateInput","dateFormat","rest","placeholderText","selected","value","prototype","toString","call","onChange","showTimeSelect","timeFormat","onChangeRaw","preventDefault","SelectInput","options","multiple","Select","data","category","key","validate","combineValidators","isRequired","message","CreateEvent","onFormSubmit","values","keys","initialValues","length","updateEvent","createEvent","toastr","success","eventId","match","params","setListener","unsetListener","className","onSubmit","handleSubmit","sub","component","positive","cancelOrActiveEvent","withFirestore","ownProps","ordered","filter","elem","currentUser","newEvent","created","Date","going","joinDAte","host","add","createdEvent","set","userId","eventDate","newData","update","cancelled","confirm","onOk","reduxForm","form","enableReinitialize","Dashboard","Grid","Column","width","firestoreConnect","RadioInput","label","ASYNC_ACTION_START","ASYNC_ACTION_FINISH","ASYNC_ACTION_ERROR","APP_LOADED","initialState","loading","initialized","updateProfile","isEmpty","isLoaaded","updatedUser","Basic","pristine","submitting","dividing","inline","types","Divider","disabled","destroyOnUnmount","interests","CropperInput","setImage","imagePreview","cropperRef","useRef","ref","height","initialAspectRatio","preview","guides","viewMode","dragMode","scalable","cropBoxMovable","cropBoxResizable","crop","imageElement","current","cropper","getCroppedCanvas","toBlob","blob","DropzoneInput","setFiles","dropzoneStyles","border","borderRadius","paddingTop","textAlign","onDrop","useCallback","acceptedFiles","file","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","photos","profile","handleDeletingPhoto","handleSettingMainPhoto","Card","itemsPerRow","photo","url","uploadProfileImage","fileName","path","uploadFile","uploadedFile","uploadTaskSnapshot","getDownloadURL","downloadUrl","get","collection","doc","subcollections","deletePhoto","deleteFile","delete","Error","setMainPhoto","storeAs","useState","files","image","handleUploadImage","handleCancelCrop","useEffect","forEach","revokeObjectURL","Row","minWidth","minHeight","overflow","EventHeader","renderJoinManageButton","attached","isGoing","some","cancelMyPlace","addAttendee","padding","fluid","bottom","left","newAttendee","FieldValue","serverTimestamp","EventAbout","verticalAlign","EventChat","Comment","Avatar","Author","Metadata","Text","Actions","Action","reply","labelPosition","primary","EventSidebar","divided","Inline","EventDetailed","ProfileInfoDesc","columns","occupation","city","about","interest","index","ProfileInfoEvents","active","Meta","ProfileInfoHeader","ProfileInfoPhotos","ProfileInfoSidebar","ProfileInfo","userUid","query","SettingNav","vertical","newPassword1","newPassword2","composeValidators","matchesField","updatePassword","providerId","DashboardSetting","render","MyPhotos","providerData","newPassword","reset","Revents","marginBottom","Test","Modal","closeIcon","open","onClose","socialLogin","selectedProvider","login","provider","additionalUserInfo","isNewUser","avatarUrl","createdAt","SubmissionError","_error","logIn","cred","signInWithEmailAndPassword","email","password","actions","LoginModal","signIn","createUserWithEmailAndPassword","userCredential","newUser","RegisterModal","ModalsManager","renderedModal","modalsLookup","TestModal","currentModal","ModalComponent","modalType","modalProps","modals","App","NotFound","location","initalState","combineReducers","firestoreReducer","firebaseReducer","action","formReducer","toastrReducer","async","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","updateProfileOnLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","transitionIn","transitionOut","document","getElementById"],"mappings":"2OAaEA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjBR,IAASS,YAAYC,SAAS,CAACC,sBAAuB,IACzCX,QAAf,E,wJC2BeY,oBAAQC,mBANC,SAAAC,GAEtB,MAAO,CACLC,KAAOD,EAAMd,SAASgB,QAGqB,CAACC,QC5BzB,yDAAM,WAAOC,EAAUC,EAAjB,oBAAAC,EAAA,6DAA4BC,EAA5B,EAA4BA,YAA5B,EAAyCC,aAC5DtB,EAAWqB,IADQ,kBAGhBrB,EAASgB,OAAOC,UAHA,OAKrBC,EAAS,CAACK,KAAO,gBALI,gDAQrBC,QAAQC,IAAR,MARqB,yDAAN,6DD4BmCC,IAA3Cd,EApCM,SAAC,GAA6B,IAA5BK,EAA2B,EAA3BA,QAASF,EAAkB,EAAlBA,KAAMY,EAAY,EAAZA,QAEpC,OACE,eAACC,EAAA,EAAKC,KAAN,CAAWC,SAAS,QAApB,UACE,cAACC,EAAA,EAAD,CAAOC,QAAM,EAACC,OAAO,QAAQC,IAAKnB,EAAKoB,UAAY,oBACnD,cAACC,EAAA,EAAD,CAAUC,SAAS,WAAWC,KAAMvB,EAAKwB,aAAe,OAAxD,SACE,eAACH,EAAA,EAASR,KAAV,WACE,cAACQ,EAAA,EAASP,KAAV,CACEW,GAAIC,IACJC,GAAG,eACHJ,KAAK,eACLK,KAAK,SAEP,cAACP,EAAA,EAASP,KAAV,CAAeW,GAAIC,IAAOH,KAAK,YAAYK,KAAK,aAChD,cAACP,EAAA,EAASP,KAAV,CAAeW,GAAIC,IAAOH,KAAK,aAAaK,KAAK,UACjD,cAACP,EAAA,EAASP,KAAV,CAAeW,GAAIC,IAAOH,KAAK,aAAaK,KAAK,SACjD,cAACP,EAAA,EAASP,KAAV,CAAeW,GAAIC,IAAOC,GAAG,kBAAkBJ,KAAK,aAAaK,KAAK,aACtE,cAACP,EAAA,EAASP,KAAV,CACES,KAAK,WACLK,KAAK,QACLC,QAAS,WACP3B,IACAU,EAAQkB,KAAK,mB,SE5BdC,EAAY,SAACC,GAEtB,OADAvB,QAAQC,IAAIsB,GACL,CACHxB,KAAM,aACNyB,QAASD,IAGJE,EAAa,WACtB,MAAO,CACH1B,KAAM,gBCOCV,wBAAQ,KAAK,CAACiC,aAAdjC,EAZf,SAAuBqC,GACrB,OACE,eAACtB,EAAA,EAAKC,KAAN,CAAWC,SAAS,QAApB,UACE,cAACqB,EAAA,EAAD,CAASC,QAAQ,QAAQR,QAAS,kBAAIM,EAAMJ,UAAU,iBACtD,cAACK,EAAA,EAAD,CACEC,QAAQ,WACRC,MAAO,CAAEC,WAAY,SACrBV,QAAS,kBAAIM,EAAMJ,UAAU,0BCJ/BS,E,uKAEE,OACO,cAAC3B,EAAA,EAAD,CAAM4B,UAAQ,EAAd,SACE,eAACC,EAAA,EAAD,WACE,eAAC7B,EAAA,EAAKC,KAAN,CAAW6B,QAAM,EAAClB,GAAImB,IAASC,OAAK,EAAClB,GAAG,IAAxC,UACE,qBAAKR,IAAI,kBAAkB2B,IAAI,SADjC,cAIA,cAACjC,EAAA,EAAKC,KAAN,CAAWW,GAAImB,IAASjB,GAAG,aAAaoB,KAAK,WAM5CC,KAAKb,MAAMnC,KAAKiD,IAAM,cAAC,EAAD,CAAcjD,KAAMgD,KAAKb,MAAMnC,OAAW,cAAC,EAAD,a,GAf/DkD,IAAMC,WA2BZrD,qBALS,SAAAC,GACtB,MAAO,CACLC,KAAOD,EAAMd,SAASgB,QAGXH,CAAyB0C,G,GCjCTU,IAAMC,U,qDCYtBC,E,uKATD,IACCC,EAAYL,KAAKb,MAAjBkB,SACP,OACI,cAACC,EAAA,EAAKxC,KAAN,UACA,cAACE,EAAA,EAAD,CAAOS,GAAIC,IAAMC,GAAE,mBAAc0B,EAASE,IAAMC,KAAK,OAAOC,UAAQ,EAACtC,IAAKkC,EAASjC,iB,GALpE8B,IAAMC,WCHpBO,EAAgB,SAACC,GAC1B,GAAIA,EACA,OAAOC,OAAOC,QAAQF,GAAQG,KAAI,SAAAC,GAAC,OAAIH,OAAOI,OAAO,GAAGD,EAAE,GAAG,CAACR,GAAKQ,EAAE,S,IC0D9DE,E,uKApDD,IACDC,EAASlB,KAAKb,MAAd+B,MACL,OACI,eAACC,EAAA,EAAQC,MAAT,WACA,eAACD,EAAA,EAAD,WACCD,EAAMG,aAAe,cAACC,EAAA,EAAD,CAAO7C,GAAG,IAAI8C,MAAM,MAAMC,OAAO,QAAjC,uBACpB,cAAC1D,EAAA,EAAKsD,MAAN,UACE,eAACtD,EAAA,EAAD,WACE,cAACA,EAAA,EAAKE,MAAN,CAAYwC,KAAK,OAAOC,UAAQ,EAACtC,IAAK+C,EAAMO,eAC5C,eAAC3D,EAAA,EAAK4D,QAAN,WACE,cAAC5D,EAAA,EAAK6D,OAAN,CACElD,GAAIC,IACJC,GAAE,kBAAauC,EAAMX,IACtBlB,QAAS6B,EAAMU,QAChB,eAAC9D,EAAA,EAAK+D,YAAN,wBACW,cAAC,IAAD,CAAMlD,GAAE,kBAAauC,EAAMY,WAA3B,SAAyCZ,EAAMa,yBAMlE,cAACZ,EAAA,EAAD,UACE,iCACE,cAACa,EAAA,EAAD,CAAMjC,KAAK,UACVkC,kBAAOf,EAAMgB,KAAKC,SAAS,gBAF9B,OAEmD,IAChDF,kBAAOf,EAAMgB,KAAKC,SAAS,UAE5B,cAACH,EAAA,EAAD,CAAMjC,KAAK,WALb,IAK0BmB,EAAMkB,aAGlC,cAACjB,EAAA,EAAD,CAASkB,WAAS,EAAlB,SACE,cAAC/B,EAAA,EAAD,CAAMgC,YAAU,EAAhB,SACKpB,EAAMqB,WAAa7B,EAAcQ,EAAMqB,WAAWzB,KAAI,SAACT,GACrD,OAAO,cAAC,EAAD,CAAiCA,SAAUA,GAAvBA,EAASE,WAK7C,eAACY,EAAA,EAAD,CAASqB,UAAQ,EAAjB,UACE,8BAAMtB,EAAMuB,cAEZ,cAACrD,EAAA,EAAD,CACEmC,MAAM,OACNmB,QAAQ,QACRrD,QAAQ,OACRZ,GAAIC,IAAMC,GAAE,kBAAauC,EAAMX,gB,GA9CvBL,IAAMC,WCWfwC,E,4MAfXC,aAAe,WACX,GAAK,EAAKzD,MAAM0D,OAChB,OAAO,EAAK1D,MAAM0D,OAAO/B,KAAI,SAAAI,GACzB,OAAO,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMX,Q,uDAKjC,OACG,8BACGP,KAAK4C,qB,GAXM1C,IAAMC,W,mFCUhB2C,GAVG,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,MAAMvF,EAA2C,EAA3CA,KAAKwF,EAAsC,EAAtCA,YAAsC,IAA1BC,KAAMC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,QACnD,OACM,eAACC,EAAA,EAAKC,MAAN,CAAYH,MAAOC,KAAaD,EAAhC,UACDC,GAAWD,EACR,cAAC5B,EAAA,EAAD,CAAOgC,OAAK,EAAC/B,MAAM,MAAnB,SAA0B2B,IAC1B,KACC,iDAAWH,GAAX,IAAkBC,YAAaA,EAAaxF,KAAMA,S,UCEhDsF,GARG,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,MAAWC,GAA2C,EAAhDxF,KAAgD,EAA3CwF,aAAYO,EAA+B,EAA/BA,KAA+B,IAA1BN,KAAMC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,QACxD,OACM,cAACC,EAAA,EAAKC,MAAN,CAAYH,MAAOC,KAAaD,EAAhC,SACG,cAACM,GAAA,EAAD,2BAAcT,GAAd,IAAqBC,YAAaA,EAAaO,KAAMA,Q,+BCmBnDE,I,OApBG,SAAC,GAAqE,IAApEV,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,YAA4D,IAA/CC,KAAME,EAAyC,EAAzCA,QAASD,EAAgC,EAAhCA,MAAQQ,EAAwB,EAAxBA,WAAcC,EAAU,4DACnF,OACI,eAACP,EAAA,EAAKC,MAAN,CAAYH,MAAOC,KAAaD,EAAhC,UACI,cAAC,KAAD,2BACMS,GADN,IAEEC,gBAAiBZ,EACjBa,SAAUd,EAAMe,MAAwD,kBAAhDlD,OAAOmD,UAAUC,SAASC,KAAKlB,EAAMe,OAC7Df,EAAMe,MAAM3B,SAASY,EAAMe,MAAQ,KACnCI,SAAUnB,EAAMmB,SAEhBR,WAAcA,EACdS,gBAAc,EAEdC,WAAW,QACXC,YAAa,SAACtD,GAAD,OAAKA,EAAEuD,qBAEpBnB,GAAWD,EAAS,cAAC5B,EAAA,EAAD,CAAOgC,OAAK,EAAC/B,MAAM,MAAnB,SAA0B2B,IAAkB,U,UCL/DqB,GAbK,SAAC,GAAoE,IAAnExB,EAAkE,EAAlEA,MAAWC,GAAuD,EAA5DxF,KAA4D,EAAvDwF,aAAYwB,EAA2C,EAA3CA,QAAQC,EAAmC,EAAnCA,SAAmC,IAA1BxB,KAAMC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,QACtE,OACM,cAACC,EAAA,EAAKC,MAAN,CAAYH,MAAOC,KAAaD,EAAhC,SACG,cAACwB,GAAA,EAAD,CAAQ1B,YAAaA,EAEbc,MAAOf,EAAMe,OAAS,KACtBI,SAAU,SAACnD,EAAG4D,GAAJ,OAAW5B,EAAMmB,SAASS,EAAKb,QACzCU,QAASA,EACTC,SAAUA,O,SCGzBG,GAAW,CACb,CAACC,IAAK,SAAUtG,KAAM,SAAUuF,MAAO,UACvC,CAACe,IAAK,UAAWtG,KAAM,UAAWuF,MAAO,WACzC,CAACe,IAAK,OAAQtG,KAAM,OAAQuF,MAAO,QACnC,CAACe,IAAK,OAAQtG,KAAM,OAAQuF,MAAO,QACnC,CAACe,IAAK,QAAStG,KAAM,QAASuF,MAAO,SACrC,CAACe,IAAK,SAAUtG,KAAM,SAAUuF,MAAO,WAErCgB,GAAWC,6BAAkB,CACjCnD,MAAQoD,sBAAW,CAACC,QAAS,gCAC7B/C,KAAO8C,sBAAW,CAACC,QAAS,2BAExBC,G,4MAEFC,a,uCAAe,WAAOC,GAAP,SAAA/H,EAAA,2DACTuD,OAAOyE,KAAK,EAAKlG,MAAMmG,eAAeC,OAAS,GADtC,gBAEV,EAAKpG,MAAMqG,YAAY,EAAKrG,MAAMmG,cAAcF,GAChD,EAAKjG,MAAMvB,QAAQkB,KAAnB,kBAAmC,EAAKK,MAAMmG,cAAc/E,KAHlD,uCAMO,EAAKpB,MAAMsG,YAAYL,GAN9B,cAOV,EAAKjG,MAAMvB,QAAQkB,KAAnB,cACA4G,UAAOC,QAAQ,UAAW,uBARhB,4C,+OAYPC,EAAU5F,KAAKb,MAAM0G,MAAMC,OAAOvF,G,SACnBP,KAAKb,MAAMzC,UAAUqJ,YAArB,iBAA2CH,I,wRAG1DA,EAAU5F,KAAKb,MAAM0G,MAAMC,OAAOvF,G,SAChCP,KAAKb,MAAMzC,UAAUsJ,cAArB,iBAA6CJ,I,qIAE7C,IAAD,OAEL,OACI,cAACzE,EAAA,EAAD,CAASqB,UAAQ,EAAjB,SACI,eAACY,EAAA,EAAD,CAAM6C,UAAU,UAAUC,SAAUlG,KAAKb,MAAMgH,aAAanG,KAAKmF,cAAjE,UACE,cAACxD,EAAA,EAAD,CAAQyE,KAAG,EAAC7E,MAAM,OAAOlC,QAAQ,kBACjC,cAACgE,EAAA,EAAD,CACGtD,KAAK,QACLsG,UAAWvD,GACXE,YAAY,gBAEZ,cAACK,EAAA,EAAD,CACAtD,KAAK,cACLsG,UAAW7C,GACXR,YAAY,oBACZO,KAAM,IAEJ,cAACF,EAAA,EAAD,CACFtD,KAAK,UACLsG,UAAWvD,GACXE,YAAY,kBAEX,cAACK,EAAA,EAAD,CACDtD,KAAK,WACLsG,UAAW9B,GACXvB,YAAY,sBACZwB,QAAWI,GACXH,UAAU,IAET,cAACpB,EAAA,EAAD,CACDtD,KAAK,OACLsG,UAAW5C,GACXC,WAAW,uBACXV,YAAY,eAEf,cAAC5D,EAAA,EAAD,CACE5B,KAAK,SACLkF,QAAQ,QACR4D,UAAQ,EACRjH,QAAQ,WAEV,cAACD,EAAA,EAAD,CACEsD,QAAQ,QACRrD,QAAQ,SACRR,QAASmB,KAAKb,MAAMmG,cAAc,kBAAI,EAAKnG,MAAMvB,QAAQkB,KAAnB,kBAAmC,EAAKK,MAAMmG,cAAc/E,MAAM,WAAK,EAAKpB,MAAMvB,QAAQkB,KAAK,iBAEtI8B,OAAOyE,KAAKrF,KAAKb,MAAMmG,eAAeC,OAAS,GAChD,cAACnG,EAAA,EAAD,CACEsD,QAAQ,OACRrD,QAAWW,KAAKb,MAAM+B,MAAMG,YAAa,qBAAuB,mBAChEE,MAASvB,KAAKb,MAAM+B,MAAMG,YAAa,QAAU,MACjDxC,QAAS,SAACkC,GACRA,EAAEuD,iBACF,EAAKnF,MAAMoH,oBAAoB,EAAKpH,MAAM+B,mB,GA1EtChB,IAAMC,WAgGjBqG,2BAAc1J,mBAdL,SAACC,EAAO0J,GAE7B,IAAMb,EAAUa,EAASZ,MAAMC,OAAOvF,GAClCW,EAAQ,GAMZ,OAHInE,EAAML,UAAUgK,QAAQ7D,QAAU9F,EAAML,UAAUgK,QAAQ7D,OAAO0C,OAAS,IAC5ErE,EAAQnE,EAAML,UAAUgK,QAAQ7D,OAAO8D,QAAO,SAAAC,GAAI,OAAIA,EAAKrG,KAAOqF,KAAS,IAAM,IAE5E,CACLN,cAAgBpE,EAChBA,WAGgD,CAACuE,YCxH3B,SAAAvE,GAAK,8CAAI,WAAO/D,EAASC,EAAhB,8BAAAC,EAAA,6DAA0BC,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,aACjEtB,EAAWqB,IACXZ,EAAYa,IACZsJ,EAAc5K,EAASgB,OAAO4J,YAC9BC,EAJ0B,2BAIX5F,GAJW,IAK9Ba,SAAU8E,EAAYrI,YACtBsD,UAAY+E,EAAY5G,IACxBwB,aAAcoF,EAAYzI,SAC1B2I,QAAU,IAAIC,KACdzE,UAAS,eACJsE,EAAY5G,IAAO,CAChBgH,OAAQ,EACRC,SAAW,IAAIF,KACf5I,SAAWyI,EAAYzI,SACvBI,YAAcqI,EAAYrI,YAC1B2I,MAAO,MAfe,kBAmBJzK,EAAU0K,IAAI,SAAUN,GAnBpB,cAmBzBO,EAnByB,iBAoBvB3K,EAAU4K,IAAV,yBAAgCD,EAAa9G,GAA7C,YAAmDsG,EAAY5G,KAAM,CACvE2F,QAAUyB,EAAa9G,GACvBgH,OAASV,EAAY5G,IACrBuH,UAAYtG,EAAMgB,KAClBiF,MAAO,IAxBkB,iCA0BtBE,GA1BsB,kCA6B5B5J,QAAQC,IAAR,MA7B4B,0DAAJ,2DDwHmC8H,YCvFxC,SAACtE,EAAOuG,GAAR,8CAAmB,WAAOtK,EAAUC,EAAjB,sBAAAC,EAAA,6DAA4BC,EAA5B,EAA4BA,YAAYC,EAAxC,EAAwCA,aACjED,IACXZ,EAAYa,IAFwB,kBAIhCb,EAAUgL,OAAV,iBAA2BxG,EAAMX,IAAjC,eAA0CkH,IAJV,uDAMtChK,QAAQC,IAAR,MANsC,yDAAnB,2DDuFqD6I,oBC9E7C,SAACrF,GAAD,8CAAW,WAAO/D,EAAUC,EAAjB,0BAAAC,EAAA,sDAA2BC,EAA3B,EAA2BA,YAAaC,EAAxC,EAAwCA,aACjED,IACXZ,EAAYa,IACZ0H,EAAU/D,EAAMG,YAAc,8CAAgD,4CAC9EsG,GAAYzG,EAAMG,YACxB,IACIqE,UAAOkC,QAAQ3C,EAAQ,CACnB4C,KAAI,uCAAE,sBAAAxK,EAAA,sEAAkBX,EAAUgL,OAAV,iBAA2BxG,EAAMX,IAAK,CAACc,YAAcsG,IAAvE,mFAAF,uDAEX,MAAMzE,GACHzF,QAAQC,IAAIwF,GAV0B,2CAAX,4DD8ENpG,CAAyEgL,YAAU,CAACC,KAAK,YAAYC,oBAAoB,EAAMlD,aAAtDgD,CAAiE5C,MEhHjK+C,G,uKACQ,IACEpF,EAAW7C,KAAKb,MAAhB0D,OACR,OAKI,cAJA,CAICqF,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,OAAN,CAAaC,MAAQ,GAArB,SACG,cAAC,EAAD,CAAYvF,OAAQA,MAEvB,cAACqF,EAAA,EAAKC,OAAN,CAAaC,MAAQ,W,GAZblI,IAAMC,WAwBftD,qBAAQwL,4BAAiB,iBAAI,CAAC,aAAWvL,mBALhC,SAAAC,GACpB,MAAO,CACH8F,OAAS9F,EAAML,UAAUgK,QAAQ7D,WAG1BhG,CAAmEoL,I,UCnBnEK,GAbI,SAAC,GAA0B,IAAzBvF,EAAwB,EAAxBA,MAAOwF,EAAiB,EAAjBA,MAAO/K,EAAU,EAAVA,KAChC,OACI,cAAC4F,EAAA,EAAKC,MAAN,UACK,sBAAK4C,UAAU,WAAf,UACE,iDAAWlD,GAAX,IACOvF,KAAMA,KACV,IACH,gCAAQ+K,UCRhBC,GAAqB,qBACrBC,GAAsB,sBACtBC,GAAqB,qBACdC,GAAa,aAsB1B,IAAMC,GAAe,CACnBC,SAAS,EACT3F,MAAO,KACP4F,aAAa,GCxBR,IAAMC,GAAgB,SAAA/L,GAAI,8CAAI,WAAOG,EAAUC,EAAjB,sBAAAC,EAAA,6DAA4BC,EAA5B,EAA4BA,YAA5B,EAAyCC,aACpEtB,EAAWqB,IAC4BN,EAAtCgM,QAAsChM,EAA7BiM,UAAcC,EAFG,aAEYlM,EAFZ,2CAIxBf,EAAS8M,cAAcG,GAJC,OAK9BxD,UAAOC,QAAQ,UAAW,iCALI,gDAQ7BlI,QAAQC,IAAR,MAR6B,yDAAJ,2DAuC1B,ICjCDyL,G,uKAEQ,IAAD,EACuDnJ,KAAKb,MAA1DiK,EADF,EACEA,SAAUC,EADZ,EACYA,WAAYlD,EADxB,EACwBA,aAAc4C,EADtC,EACsCA,cAC3C,OACI,eAAC5H,EAAA,EAAD,WACI,cAACQ,EAAA,EAAD,CAAQ2H,UAAQ,EAAC9I,KAAK,QAAQnB,QAAQ,WACtC,eAAC+D,EAAA,EAAD,CAAM8C,SAAUC,EAAa4C,GAA7B,UACI,cAAC1F,EAAA,EAAD,CACI+E,MAAO,EACPrI,KAAK,cACLvC,KAAK,OACL6I,UAAWvD,GACXE,YAAY,aAEhB,eAACI,EAAA,EAAKhC,MAAN,CAAYmI,QAAM,EAAlB,UAEE,2CACA,cAAClG,EAAA,EAAD,CACEtD,KAAK,SACLvC,KAAK,QACL6I,UAAWiC,GACXxE,MAAM,OACNyE,MAAM,SAEP,cAAClF,EAAA,EAAD,CACCtD,KAAK,SACLvC,KAAK,QACL6I,UAAWiC,GACXxE,MAAM,SACNyE,MAAM,cAGV,cAAClF,EAAA,EAAD,CACE+E,MAAO,EACPrI,KAAK,cACLsG,UAAW5C,GACXC,WAAW,uBACXV,YAAY,kBAOd,cAACK,EAAA,EAAD,CACItD,KAAK,OACLiD,YAAY,YACZwB,QAAS,CAACgF,MAAO,CAAC,aAClBjB,MAAM,SACNlC,UAAWvD,GACXsF,MAAO,IAEX,cAACqB,GAAA,EAAD,IACA,cAACrK,EAAA,EAAD,CAAQsK,SAAUN,GAAYC,EAAY7I,KAAK,QAAQ8F,UAAQ,EAACjH,QAAQ,6B,GAtDxEc,aA6DLtD,qBAAQC,kBAAQ,KAAK,CAACiM,mBAAgBjB,YAAU,CAACC,KAAM,cAAeC,oBAAoB,EAAM2B,kBAAmB,IAAnH9M,CAA4HsM,IC/DrIS,GAAY,CAChB,CAAE/E,IAAK,SAAUtG,KAAM,SAAUuF,MAAO,UACxC,CAAEe,IAAK,UAAWtG,KAAM,UAAWuF,MAAO,WAC1C,CAAEe,IAAK,OAAQtG,KAAM,OAAQuF,MAAO,QACpC,CAAEe,IAAK,OAAQtG,KAAM,OAAQuF,MAAO,QACpC,CAAEe,IAAK,QAAStG,KAAM,QAASuF,MAAO,SACtC,CAAEe,IAAK,SAAUtG,KAAM,SAAUuF,MAAO,WA0D3BgE,eAAU,CAAEC,KAAM,cAAeC,oBAAoB,EAAO2B,kBAAmB,GAA/E7B,EAvDC,SAAC,GAA0D,EAAxDsB,SAAwD,EAA9CC,WAA+C,IAAnClD,EAAkC,EAAlCA,aAAc4C,EAAoB,EAApBA,cACrD,OACE,eAAC5H,EAAA,EAAD,WACE,cAACQ,EAAA,EAAD,CAAQ2H,UAAQ,EAAC9I,KAAK,QAAQnB,QAAQ,aACtC,uFACA,eAAC+D,EAAA,EAAD,CAAM8C,SAAUC,EAAa4C,GAA7B,UACE,eAAC3F,EAAA,EAAKhC,MAAN,CAAYmI,QAAM,EAAlB,UACE,0DACA,cAAClG,EAAA,EAAD,CAAOtD,KAAK,SAASsG,UAAWiC,GAAY9K,KAAK,QAAQsG,MAAM,SAASyE,MAAM,WAC9E,cAAClF,EAAA,EAAD,CACEtD,KAAK,SACLsG,UAAWiC,GACX9K,KAAK,QACLsG,MAAM,eACNyE,MAAM,iBAER,cAAClF,EAAA,EAAD,CACEtD,KAAK,SACLsG,UAAWiC,GACX9K,KAAK,QACLsG,MAAM,UACNyE,MAAM,eAGV,cAACkB,GAAA,EAAD,IACA,2DACA,cAACpG,EAAA,EAAD,CAAOtD,KAAK,QAAQsG,UAAW7C,GAAUR,YAAY,aACrD,cAACK,EAAA,EAAD,CACEtD,KAAK,YACLsG,UAAW9B,GACXC,QAASoF,GACT9F,MAAM,YACNW,UAAU,EACVzB,YAAY,0BAEd,cAACK,EAAA,EAAD,CACE+E,MAAO,EACPrI,KAAK,aACLvC,KAAK,OACL6I,UAAWvD,GACXE,YAAY,eAEd,cAACK,EAAA,EAAD,CACE+E,MAAO,EACPrI,KAAK,SACLyE,QAAS,CAAEgF,MAAO,CAAC,cACnBnD,UAAWvD,GACXE,YAAY,sBAEd,cAACyG,GAAA,EAAD,IACA,cAACrK,EAAA,EAAD,CAASoB,KAAK,QAAQ8F,UAAQ,EAACjH,QAAQ,4B,2BC1BhC,SAASwK,GAAT,GAAiD,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,aACtCC,EAAaC,iBAAO,MAS5B,OAEI,cAAC,KAAD,CACEC,IAAKF,EACL7L,IAAK4L,EACLzK,MAAO,CAAC6K,OAAQ,IAAK/B,MAAO,QAE5BgC,mBAAoB,EACpBC,QAAQ,eACRC,QAAQ,EACRC,SAAU,EACVC,SAAS,OACTC,UAAU,EACVC,gBAAgB,EAChBC,kBAAkB,EAClBC,KAvBW,WACf,IAAMC,EAA8B,OAAfb,QAAsC,IAAfA,OAAwB,EAASA,EAAWc,SACvD,OAAjBD,QAA0C,IAAjBA,OAA0B,EAASA,EAAaE,SACjFC,mBAAmBC,QAAO,SAAAC,GACzBpB,EAASoB,KACV,iB,cCrBG,SAASC,GAAT,GAAoC,IAAZC,EAAW,EAAXA,SAC/BC,EAAiB,CACpBC,OAAQ,kBACRC,aAAc,KACdC,WAAY,OACZC,UAAW,UAORC,EAASC,uBAAY,SAAAC,GACzBR,EAASQ,EAAc9K,KAAI,SAAA+K,GAAI,OAAIjL,OAAOI,OAAO6K,EAAM,CACnDxB,QAASyB,IAAIC,gBAAgBF,WAEhC,CAACT,IAhB4C,EAiBIY,aAAY,CAACN,WAA1DO,EAjByC,EAiBzCA,aAAcC,EAjB2B,EAiB3BA,cAAeC,EAjBY,EAiBZA,aAEpC,OACE,gDAASF,KAAT,IAAyB3M,MAAO6M,EAAY,2BAAOd,GAZ/B,CACnBC,OAAQ,qBAW+ED,EAAxF,UACE,qCAAWa,MACX,cAAClK,EAAA,EAAD,CAAMjC,KAAK,SAASS,KAAK,SACzB,cAACmB,EAAA,EAAD,CAAQtC,QAAQ,wB,cCjBPvC,qBAAQ,KAARA,EA7BI,SAAC,GAAoE,IAAnEsP,EAAkE,EAAlEA,OAAQC,EAA0D,EAA1DA,QAASC,EAAiD,EAAjDA,oBAAqBC,EAA4B,EAA5BA,uBACvD,OACI,eAAC,WAAD,WACI,cAAC5K,EAAA,EAAD,CAAQyE,KAAG,EAAC7E,MAAM,OAAOlC,QAAQ,eAEjC,eAACmN,GAAA,EAAKpL,MAAN,CAAYqL,YAAa,EAAzB,UACG,eAACD,GAAA,EAAD,WACG,cAACxO,EAAA,EAAD,CAAOG,IAAKkO,EAAQjO,UAAY,oBAChC,cAACgB,EAAA,EAAD,CAAQkH,UAAQ,EAAhB,2BAED8F,GAAUA,EAAOtL,KAAI,SAAA4L,GAClB,OACM,eAACF,GAAA,EAAD,WAEA,cAACxO,EAAA,EAAD,CACIG,IAAKuO,EAAMC,MAEf,sBAAK1G,UAAU,iBAAf,UACI,cAAC7G,EAAA,EAAD,CAAQkE,OAAK,EAAC/B,MAAM,QAAQ1C,QAAS,kBAAI0N,EAAuBG,IAAhE,kBACA,cAACtN,EAAA,EAAD,CAAQkE,OAAK,EAAC1E,KAAK,QAAQ2C,MAAM,MAAM1C,QAAS,kBAAIyN,EAAoBI,WAPjEA,EAAMnM,gBC8F5B1D,qBAAQC,mBAPC,SAAAC,GACtB,MAAO,CACLE,KAAOF,EAAMd,SAASgB,KACtBmP,OAASrP,EAAML,UAAUgK,QAAQ0F,OACjCC,QAAUtP,EAAMd,SAASoQ,WAGkB,CAACO,mBNnEd,SAACf,EAAMgB,GAAP,8CAAoB,WAAO1P,EAAUC,EAAjB,kCAAAC,EAAA,6DAA4BC,EAA5B,EAA4BA,YAAaC,EAAzC,EAAyCA,aACrFtB,EAAWqB,IACXZ,EAAYa,IACZP,EAAOf,EAASgB,OAAO4J,YACvBiG,EAJ4C,UAIlC9P,EAAKiD,IAJ6B,gBAK5CuE,EAAU,CACZzE,KAAO8M,GANuC,SAShD1P,ED9CG,CACLK,KAAMgL,KCoC4C,UAUxBvM,EAAS8Q,WAAWD,EAAMjB,EAAM,KAAMrH,GAVd,eAU5CwI,EAV4C,iBAWxBA,EAAaC,mBAAmB/C,IAAIgD,iBAXZ,eAW5CC,EAX4C,iBAY5BzQ,EAAU0Q,IAAV,gBAAuBpQ,EAAKiD,MAZA,kBAanC0E,OAAOvG,SAb4B,kCActCnC,EAAS8M,cAAc,CACzB3K,SAAW+O,IAf6B,yBAiBtCnQ,EAAK+L,cAAc,CACrB3K,SAAW+O,IAlB6B,yBAqBxCzQ,EAAU0K,IAAI,CAClBiG,WAAa,QACbC,IAAMtQ,EAAKiD,IACXsN,eAAiB,CAAC,CAACF,WAAa,YAClC,CACEtN,KAAO8M,EACPF,IAAKQ,IA3BuC,QA6BhDhQ,ED5DG,CACLK,KAAMiL,KC8B4C,kDAgC9ChL,QAAQC,IAAR,MAhC8C,0DAApB,2DMmEkC8P,YNhCzC,SAACd,GAAD,8CAAW,WAAOvP,EAAUC,EAAjB,0BAAAC,EAAA,6DAA2BC,EAA3B,EAA2BA,YAAaC,EAAxC,EAAwCA,aACtEtB,EAAWqB,IACXZ,EAAYa,IACZP,EAAOf,EAASgB,OAAO4J,YAHO,kBAK5B5K,EAASwR,WAAT,UAAuBzQ,EAAKiD,IAA5B,wBAA+CyM,EAAM3M,OALzB,uBAM5BrD,EAAUgR,OAAO,CACrBL,WAAa,QACbC,IAAMtQ,EAAKiD,IACXsN,eAAiB,CAAC,CAChBF,WAAa,SACbC,IAAMZ,EAAMnM,OAXkB,+DAe5B,IAAIoN,MAAM,wBAfkB,0DAAX,2DMgCsDC,aNdrD,SAAAlB,GAAK,8CAAI,WAAOvP,EAAUC,EAAjB,sBAAAC,EAAA,6DAA2BC,EAA3B,EAA2BA,YACvDrB,EAAWqB,IACXN,EAAOf,EAASgB,OAAO4J,YAFK,kBAIxB5K,EAAS8M,cAAc,CAC3B3K,SAAWsO,EAAMC,MALW,uBAOxB3P,EAAK+L,cAAc,CACvB3K,SAAWsO,EAAMC,MARW,+DAW1B,IAAIgB,MAAM,wBAXgB,0DAAJ,6DMevBtF,4BAAiB,SAAApL,GAAI,MAftB,CAAC,CACNoQ,WAAa,QACbC,IAaqCrQ,EAhBzBA,KAGDgD,IACXsN,eAAiB,CAAC,CAACF,WAAa,WAChCQ,QAAU,cAUChR,EAlGE,SAAC,GAAuE,IAAtEuP,EAAqE,EAArEA,OAAQC,EAA6D,EAA7DA,QAAUO,EAAmD,EAAnDA,mBAAoBY,EAA+B,EAA/BA,YAAaI,EAAkB,EAAlBA,aAAkB,EAC1DE,mBAAS,IADiD,oBAC7EC,EAD6E,KACtE3C,EADsE,OAE1D0C,mBAAS,MAFiD,oBAE7EE,EAF6E,KAEtElE,EAFsE,OAGtDgE,oBAAS,GAH6C,oBAI9EG,GAJ8E,UAI7D,uCAAG,sBAAA5Q,EAAA,+EAEduP,EAAmBoB,EAAOD,EAAM,GAAGhO,MAFrB,OAGpBmO,IACAxI,UAAOC,QAAQ,UAAW,+BAJN,gDAMtBlI,QAAQC,IAAR,MACAgI,UAAOxC,MAAM,OAAO,wBAPE,yDAAH,sDAUjBoJ,EAAmB,uCAAG,WAAOI,GAAP,SAAArP,EAAA,+EAEhBmQ,EAAYd,GAFI,OAGtBhH,UAAOC,QAAQ,UAAW,8BAHJ,+CAKtBD,UAAOxC,MAAM,OAAQ,KAAM+B,SALL,wDAAH,sDAQnBsH,EAAsB,uCAAG,WAAOG,GAAP,SAAArP,EAAA,+EAEtBuQ,EAAalB,GAFS,sDAK3BhH,UAAOxC,MAAM,KAAM+B,SALQ,wDAAH,sDAQtBiJ,EAAmB,WACzB9C,EAAS,IACTtB,EAAS,OAQL,OALJqE,qBAAU,WACN,OAAO,WACHJ,EAAMK,SAAQ,SAAAvC,GAAI,OAAIC,IAAIuC,gBAAgBxC,EAAKxB,eAErD,CAAC0D,IAEK,eAAC5M,EAAA,EAAD,WACI,cAACQ,EAAA,EAAD,CAAQ2H,UAAQ,EAAC9I,KAAK,QAAQnB,QAAQ,gBACtC,eAAC6I,EAAA,EAAD,WACI,cAACA,EAAA,EAAKoG,IAAN,IACA,eAACpG,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,UACI,cAACzG,EAAA,EAAD,CAAQJ,MAAM,OAAO6E,KAAG,EAAC/G,QAAQ,uBACjC,cAAC8L,GAAD,CAAeC,SAAUA,OAE7B,cAAClD,EAAA,EAAKC,OAAN,CAAaC,MAAO,IACpB,eAACF,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,UACI,cAACzG,EAAA,EAAD,CAAQyE,KAAG,EAAC7E,MAAM,OAAOlC,QAAQ,0BAChC0O,EAAMxI,OAAS,GAChB,cAACsE,GAAD,CAAcC,SAAUA,EAAUC,aAAcgE,EAAM,GAAG1D,aAE7D,cAACnC,EAAA,EAAKC,OAAN,CAAaC,MAAO,IACpB,eAACF,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,UACI,cAACzG,EAAA,EAAD,CAAQyE,KAAG,EAAC7E,MAAM,OAAOlC,QAAQ,gCAChC0O,EAAMxI,OAAS,GACf,eAAC,WAAD,WACI,qBACGU,UAAU,cACV3G,MAAO,CAACiP,SAAW,QAASC,UAAY,QAASC,SAAW,YAC/D,eAACrP,EAAA,EAAOgC,MAAR,WACI,cAAChC,EAAA,EAAD,CAAQP,QAASoP,EAAmB3O,MAAO,CAAC8I,MAAQ,SAClD9B,UAAQ,EAAC1H,KAAK,UAChB,cAACQ,EAAA,EAAD,CAAQP,QAASqP,EAAkB5O,MAAO,CAAC8I,MAAQ,SACjDxJ,KAAK,sBASxB,cAAC6K,GAAA,EAAD,IACA,cAAC,GAAD,CAAY2C,OAAQA,EAAQC,QAASA,EAClCC,oBAAqBA,EACrBC,uBAAwBA,UCpFrCmC,G,4MACHC,uBAAyB,WAAO,IAAD,EACN,EAAKxP,MAAtB+B,EADuB,EACvBA,MAAOqG,EADgB,EAChBA,OAQd,GAAIrG,EAAMY,YAAcyF,EACtB,OACE,cAACpG,EAAA,EAAD,CAASyN,SAAS,SAASpM,UAAQ,EAAnC,SACA,cAACpD,EAAA,EAAD,CACAX,GAAIC,IAAMC,GAAE,uBAAkBuC,EAAMX,IACpCgB,MAAM,SAASmB,QAAQ,QAFvB,4BAQF,IAAMH,EAAY7B,EAAcQ,EAAMqB,WAChCsM,EAAUtM,GAAaA,EAAUuM,MAAK,SAACzO,GAAD,OAAcA,EAASE,KAAOgH,KAC1E,OACE,eAACpG,EAAA,EAAD,CAASyN,SAAS,SAAlB,UACGC,IAAY3N,EAAMG,aACnB,cAACjC,EAAA,EAAD,CAAQP,QAAS,kBAAI,EAAKM,MAAM4P,cAAc7N,IAA9C,8BACE2N,IAAY3N,EAAMG,aACpB,cAACjC,EAAA,EAAD,CAAQmC,MAAM,OACZ1C,QAAW,kBAAI,EAAKM,MAAM6P,YAAY9N,IADxC,6BAGEA,EAAMG,aAAe,cAACC,EAAA,EAAD,CAAOd,KAAK,QAAQe,MAAM,MAA1B,yC,uDAO3B,IADO,EAaiBvB,KAAKb,MAAtB+B,EAbA,EAaAA,MAbA,EAaOqG,OACZ,OACK,eAACpG,EAAA,EAAQC,MAAT,WACG,eAACD,EAAA,EAAD,CAASmC,OAAK,EAACsL,SAAS,MAAMtP,MAAO,CAAE2P,QAAS,KAAhD,UACE,cAACjR,EAAA,EAAD,CAAOG,IAAI,oCAAoC+Q,OAAK,EAAC5P,MAhBzC,CACpBqH,OAAQ,qBAiBA,cAACxF,EAAA,EAAD,CAASmC,OAAK,EAAChE,MAdC,CACxBvB,SAAU,WACVoR,OAAQ,KACRC,KAAM,KACNhH,MAAO,OACP+B,OAAQ,OACR5I,MAAO,SAQC,SACE,cAACzD,EAAA,EAAKsD,MAAN,UACE,cAACtD,EAAA,EAAD,UACE,eAACA,EAAA,EAAK4D,QAAN,WACE,cAACC,EAAA,EAAD,CAEEnB,KAAK,OACLnB,QAAS6B,EAAMU,MACftC,MAAO,CAAEiC,MAAO,WAGlB,4BAAIU,kBAAOf,EAAMgB,KAAKC,SAAS,kBAC/B,2CACY,iCAASjB,EAAMa,0BAOlC/B,KAAK2O,gC,GA5EEzO,IAAMC,WAsFjBrD,sBALS,SAAAC,GACtB,MAAO,CACLwK,OAASxK,EAAMd,SAASgB,KAAKgD,OAGO,CAAC+O,YXrCd,SAAC9N,GAAD,8CAAW,WAAO/D,EAAUC,EAAjB,4BAAAC,EAAA,6DAA4BC,EAA5B,EAA4BA,YAAaC,EAAzC,EAAyCA,aACrEb,EAAYa,IACZtB,EAAWqB,IACXN,EAAOf,EAASgB,OAAO4J,YACzBwI,EAAc,CACf7Q,YAAcpB,IAAWnB,SAASoQ,QAAQ7N,YAC1CyI,OAAQ,EACRE,MAAO,EACP/I,SAAWhB,IAAWnB,SAASoQ,QAAQjO,UAAY,kBACnD8I,SAAWxK,EAAU4S,WAAWC,mBATD,kBAYtB7S,EAAUgL,OAAV,iBAA2BxG,EAAMX,IAAjC,mCACQvD,EAAKiD,KAASoP,IAbA,wBAetB3S,EAAU4K,IAAV,yBAAgCpG,EAAMX,GAAtC,YAA4CvD,EAAKiD,KAAM,CACzD2F,QAAU1E,EAAMX,GAChBgH,OAASvK,EAAKiD,IACduH,UAAYtG,EAAMgB,KAClBiF,MAAO,IAnBiB,QAqB5BzB,UAAOC,QAAQ,UAAW,6BArBE,kDAuB5BlI,QAAQC,IAAR,MACAgI,UAAOxC,MAAM,OAAQ,mCAxBO,0DAAX,2DWqC2B6L,cXVzB,SAAA7N,GAAK,8CAAI,WAAO/D,EAASC,EAAhB,0BAAAC,EAAA,6DAA0BC,EAA1B,EAA0BA,YAAYC,EAAtC,EAAsCA,aAClEtB,EAAWqB,IACXZ,EAAYa,IACZP,EAAOf,EAASgB,OAAO4J,YAHK,kBAKxBnK,EAAUgL,OAAV,iBAA2BxG,EAAMX,IAAjC,mCACYvD,EAAKiD,KAASvD,EAAU4S,WAAW5B,WANvB,uBAQxBhR,EAAUgR,OAAV,yBAAmCxM,EAAMX,GAAzC,YAA+CvD,EAAKiD,MAR5B,OAS9ByF,UAAOC,QAAQ,UAAW,iCATI,kDAW9BlI,QAAQC,IAAR,MACAgI,UAAOxC,MAAM,OAAQ,wBAZS,0DAAJ,4DWUnBpG,CAAuD4R,IC5CvDc,G,uKA7CD,IACEtO,EAAUlB,KAAKb,MAAf+B,MAER,OACO,eAACC,EAAA,EAAQC,MAAT,WACG,cAACD,EAAA,EAAD,CAASyN,SAAS,MAAlB,SACE,eAAC1G,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACE,cAACpG,EAAA,EAAD,CAAMxB,KAAK,QAAQe,MAAM,OAAOxB,KAAK,WAEvC,cAACmI,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,SACG,4BAAIlH,EAAMuB,qBAMjB,cAACtB,EAAA,EAAD,CAASyN,UAAQ,EAAjB,SACE,eAAC1G,EAAA,EAAD,CAAMuH,cAAc,SAApB,UACE,cAACvH,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACE,cAACpG,EAAA,EAAD,CAAMjC,KAAK,WAAWS,KAAK,QAAQe,MAAM,WAE3C,cAAC2G,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,SACE,+BAAOnG,kBAAOf,EAAMgB,KAAKC,SAAU,yBAKzC,cAAChB,EAAA,EAAD,CAASyN,UAAQ,EAAjB,SACE,eAAC1G,EAAA,EAAD,CAAMuH,cAAc,SAApB,UACE,cAACvH,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACE,cAACpG,EAAA,EAAD,CAAMjC,KAAK,SAASS,KAAK,QAAQe,MAAM,WAEzC,cAAC2G,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,SACE,+BAAOlH,EAAMkB,YAEf,cAAC8F,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACE,cAAChJ,EAAA,EAAD,CAAQmC,MAAM,OAAOf,KAAK,OAAOnB,QAAQ,2B,GAtCxCa,IAAMC,W,UC2FhBuP,G,uKA1FP,OACQ,eAAC,WAAD,WACE,cAACvO,EAAA,EAAD,CACEsK,UAAU,SACVmD,SAAS,MACTnP,UAAQ,EACR8B,MAAM,OACNjC,MAAO,CAAEgM,OAAQ,QALnB,SAOE,cAAC3J,EAAA,EAAD,sCAGF,cAACR,EAAA,EAAD,CAASyN,UAAQ,EAAjB,SACE,eAACe,GAAA,EAAQvO,MAAT,WACE,eAACuO,GAAA,EAAD,WACE,cAACA,GAAA,EAAQC,OAAT,CAAgBzR,IAAI,qBACpB,eAACwR,GAAA,EAAQjO,QAAT,WACE,cAACiO,GAAA,EAAQE,OAAT,CAAgBpR,GAAG,IAAnB,kBACA,cAACkR,GAAA,EAAQG,SAAT,UACE,oDAEF,cAACH,GAAA,EAAQI,KAAT,4BACA,cAACJ,GAAA,EAAQK,QAAT,UACE,cAACL,GAAA,EAAQM,OAAT,4BAKN,eAACN,GAAA,EAAD,WACE,cAACA,GAAA,EAAQC,OAAT,CAAgBzR,IAAI,qBACpB,eAACwR,GAAA,EAAQjO,QAAT,WACE,cAACiO,GAAA,EAAQE,OAAT,CAAgBpR,GAAG,IAAnB,uBACA,cAACkR,GAAA,EAAQG,SAAT,UACE,yDAEF,cAACH,GAAA,EAAQI,KAAT,UACE,6FAIF,cAACJ,GAAA,EAAQK,QAAT,UACE,cAACL,GAAA,EAAQM,OAAT,yBAGJ,cAACN,GAAA,EAAQvO,MAAT,UACE,eAACuO,GAAA,EAAD,WACE,cAACA,GAAA,EAAQC,OAAT,CAAgBzR,IAAI,qBACpB,eAACwR,GAAA,EAAQjO,QAAT,WACE,cAACiO,GAAA,EAAQE,OAAT,CAAgBpR,GAAG,IAAnB,wBACA,cAACkR,GAAA,EAAQG,SAAT,UACE,6CAEF,cAACH,GAAA,EAAQI,KAAT,gDACA,cAACJ,GAAA,EAAQK,QAAT,UACE,cAACL,GAAA,EAAQM,OAAT,iCAOV,eAACN,GAAA,EAAD,WACE,cAACA,GAAA,EAAQC,OAAT,CAAgBzR,IAAI,qBACpB,eAACwR,GAAA,EAAQjO,QAAT,WACE,cAACiO,GAAA,EAAQE,OAAT,CAAgBpR,GAAG,IAAnB,2BACA,cAACkR,GAAA,EAAQG,SAAT,UACE,+CAEF,cAACH,GAAA,EAAQI,KAAT,oDACA,cAACJ,GAAA,EAAQK,QAAT,UACE,cAACL,GAAA,EAAQM,OAAT,4BAKN,eAAC7M,EAAA,EAAD,CAAM8M,OAAK,EAAX,UACE,cAAC9M,EAAA,EAAKI,SAAN,IACA,cAACpE,EAAA,EAAD,CACEC,QAAQ,YACR8Q,cAAc,OACdvR,KAAK,OACLwR,SAAO,mB,GAnFTlQ,IAAMC,WC+CfkQ,G,uKA5CD,IACEnP,EAAUlB,KAAKb,MAAf+B,MAEFqB,EAAY7B,EAAcQ,EAAMqB,WACtC,OACO,eAAC,WAAD,WACE,eAACpB,EAAA,EAAD,CACEsK,UAAU,SACVnM,MAAO,CAAEgM,OAAQ,QACjBsD,SAAS,MACTvM,WAAS,EACT5C,UAAQ,EACR8B,MAAM,OANR,UAQGgB,GAAaA,EAAUgD,OAR1B,IAQuD,GAApBhD,EAAUgD,OAAc,SAAW,SARtE,YAUEhD,EAAUzB,KAAI,SAAAT,GACZ,OACG,cAACc,EAAA,EAAD,CAASyN,UAAQ,EAAjB,SACA,cAAC9Q,EAAA,EAAKsD,MAAN,CAAYkP,SAAO,EAAnB,SACE,eAACxS,EAAA,EAAD,CAAMwB,MAAO,CAAEvB,SAAU,YAAzB,UACoB,GAAjBsC,EAAS8G,MACV,cAAC7F,EAAA,EAAD,CACEhC,MAAO,CAAEvB,SAAU,YACnBwD,MAAM,SACNC,OAAO,QAHT,kBAOA,cAAC1D,EAAA,EAAKE,MAAN,CAAYwC,KAAK,OAAOrC,IAAKkC,EAASjC,WACtC,cAACN,EAAA,EAAK4D,QAAN,CAAc+N,cAAc,SAA5B,SACE,cAAC3R,EAAA,EAAK6D,OAAN,CAAalD,GAAG,KAAhB,SAAqB,cAAC,IAAD,CAAME,GAAE,mBAAc0B,EAASE,IAA/B,SAClBF,EAAS7B,mC,GAjCf0B,IAAMC,WCelBxC,gBAhBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACE,eAACuD,EAAA,EAAD,CAAS6B,aAAW,EAApB,UACE,eAACrB,EAAA,EAAD,CAAQ/C,MAAI,EAAZ,UACE,cAACoD,EAAA,EAAD,CAAMjC,KAAK,WADb,4DAIA,cAACoB,EAAA,EAAQoP,OAAT,UACE,cAACnR,EAAA,EAAD,CAAQP,QAAS,kBAAMjB,EAAQkB,KAAK,eAAesR,SAAO,EAA1D,2CCDFI,G,ySASE5K,EAAU5F,KAAKb,MAAM0G,MAAMC,OAAOvF,G,SACnBP,KAAKb,MAAMzC,UAAUqJ,YAArB,iBAA2CH,I,wRAI1DA,EAAU5F,KAAKb,MAAM0G,MAAMC,OAAOvF,G,SAChCP,KAAKb,MAAMzC,UAAUsJ,cAArB,iBAA6CJ,I,qIAE3C,IACK1E,EAAUlB,KAAKb,MAAf+B,MACV,OAAkC,IAA9BN,OAAOyE,KAAKnE,GAAOqE,OAAqB,cAAC,GAAD,IAG1C,eAAC2C,EAAA,EAAD,WACK,eAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,UACE,cAAC,GAAD,CAAalH,MAAOA,IACpB,cAAC,GAAD,CAAYA,MAAOA,IACnB,cAAC,GAAD,OAEH,cAACgH,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACI,cAAC,GAAD,CAAclH,MAAOA,a,GA7BVhB,IAAMC,WAgDnBtD,qBACb2J,gBACA1J,mBAdsB,SAACC,EAAO0J,GAC9B,IAAMb,EAAUa,EAASZ,MAAMC,OAAOvF,GACjCW,EAAQ,GAMZ,OAHInE,EAAML,UAAUgK,QAAQ7D,QAAU9F,EAAML,UAAUgK,QAAQ7D,OAAO0C,OAAS,IAC5ErE,EAAQnE,EAAML,UAAUgK,QAAQ7D,OAAO8D,QAAO,SAAAC,GAAI,OAAIA,EAAKrG,KAAOqF,KAAS,IAAM,IAE5E,CACJ1E,YAGSrE,CAGZ2T,ICvBYC,GAnCS,SAAC,GAAe,IAAdpE,EAAa,EAAbA,QAEtB,OADA5O,QAAQC,IAAI2O,GAER,cAACnE,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,SACA,cAACjH,EAAA,EAAD,UACI,eAAC+G,EAAA,EAAD,CAAMwI,QAAS,EAAf,UACI,eAACxI,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,UACI,cAACzG,EAAA,EAAD,CAAQ/C,KAAK,QAAQS,QAAQ,uBAC7B,yCAAW,iCAASgN,EAAQsE,gBAC5B,iDAAmB,iCAAStE,EAAQuE,UAEpC,4BAAIvE,EAAQwE,WAGhB,eAAC3I,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,UAEI,cAACzG,EAAA,EAAD,CAAQ/C,KAAK,gBAAgBS,QAAQ,cACrC,cAACiB,EAAA,EAAD,UACK+L,EAAQzC,WAAayC,EAAQzC,UAAU9I,KAAI,SAACgQ,EAAUC,GACnD,OACJ,eAACjT,EAAA,EAAD,WACI,cAACkE,EAAA,EAAD,CAAMjC,KAAK,UACX,cAACjC,EAAA,EAAK4D,QAAN,UAAeoP,MAFRC,mBCsBpBC,GA3CW,WACtB,OACI,cAAC9I,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,SACA,eAACjH,EAAA,EAAD,CAASyN,UAAQ,EAAjB,UACI,cAACjN,EAAA,EAAD,CAAQ/C,KAAK,WAAWS,QAAQ,WAChC,eAACxB,EAAA,EAAD,CAAMwE,WAAS,EAAC/D,UAAQ,EAAxB,UACI,cAACT,EAAA,EAAKC,KAAN,CAAWiC,KAAK,aAAakR,QAAM,IACnC,cAACpT,EAAA,EAAKC,KAAN,CAAWiC,KAAK,gBAChB,cAAClC,EAAA,EAAKC,KAAN,CAAWiC,KAAK,kBAChB,cAAClC,EAAA,EAAKC,KAAN,CAAWiC,KAAK,qBAGpB,eAACyM,GAAA,EAAKpL,MAAN,CAAYqL,YAAa,EAAzB,UAEI,eAACD,GAAA,EAAD,WACI,cAACxO,EAAA,EAAD,CAAOG,IAAK,sCACZ,eAACqO,GAAA,EAAK9K,QAAN,WACI,cAAC8K,GAAA,EAAK7K,OAAN,CAAa8J,UAAU,SAAvB,yBAGA,cAACe,GAAA,EAAK0E,KAAN,CAAWzF,UAAU,SAArB,+CAMR,eAACe,GAAA,EAAD,WACI,cAACxO,EAAA,EAAD,CAAOG,IAAK,sCACZ,eAACqO,GAAA,EAAK9K,QAAN,WACI,cAAC8K,GAAA,EAAK7K,OAAN,CAAa8J,UAAU,SAAvB,yBAGA,cAACe,GAAA,EAAK0E,KAAN,CAAWzF,UAAU,SAArB,wDCZT0F,GArBW,SAAC,GAAe,IAAd9E,EAAa,EAAbA,QACxB,OACI,cAACnE,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,SACA,cAACjH,EAAA,EAAD,UACA,cAACrD,EAAA,EAAKsD,MAAN,UACI,eAACtD,EAAA,EAAD,WACI,cAACA,EAAA,EAAKE,MAAN,CAAYC,QAAM,EAACuC,KAAK,QAAQrC,IAAKkO,EAAQjO,WAC7C,eAACN,EAAA,EAAK4D,QAAN,CAAc+N,cAAc,SAA5B,UACI,cAAC9N,EAAA,EAAD,CAAQlD,GAAG,KAAX,SAAiB4N,EAAQ7N,cACzB,uBACA,cAACmD,EAAA,EAAD,CAAQlD,GAAG,KAAX,SAAiB4N,EAAQsE,aACzB,uBACA,eAAChP,EAAA,EAAD,CAAQlD,GAAG,KAAX,sBAA0B4N,EAAQuE,qBCSvCQ,GArBW,SAAC,GAAc,IAAbhF,EAAY,EAAZA,OACxB,OAEI,cAAClE,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,SACA,eAACjH,EAAA,EAAD,CAASyN,UAAQ,EAAjB,UACI,cAACjN,EAAA,EAAD,CAAQ/C,KAAK,QAAQS,QAAQ,WAE7B,cAACrB,EAAA,EAAMoD,MAAP,CAAaZ,KAAK,QAAlB,SACK4L,EAAO7G,OAAS,GACd6G,EAAOtL,KAAI,SAAA4L,GACP,OACI,cAAC1O,EAAA,EAAD,CAAsBG,IAAKuO,EAAMC,KAArBD,EAAMnM,eCF9B8Q,GATY,WACvB,OACI,cAACnJ,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACA,cAACjH,EAAA,EAAD,UACI,cAAC/B,EAAA,EAAD,CAAQmC,MAAM,OAAO2N,OAAK,EAAC5L,OAAK,EAACjE,QAAQ,sBCwB/CiS,G,uKACQ,IAAD,EACyBtR,KAAKb,MAA9BkN,EADA,EACAA,QAAeD,GADf,EACSnP,KADT,EACemP,QAEpB,OACI,eAAClE,EAAA,EAAD,WAEI,cAAC,GAAD,CAAmBmE,QAASA,IAC5B,cAAC,GAAD,CAAiBA,QAASA,IAC1B,cAAC,GAAD,IACCD,GAAUA,EAAO7G,OAAS,GAC3B,cAAC,GAAD,CAAmB6G,OAAQA,IAC3B,cAAC,GAAD,W,GAZUjM,aA4CXtD,qBACXC,mBA/DoB,SAACC,EAAO0J,GAC5B,IAAI4F,EAAU,GACVkF,EAAU,KAQd,OAPI9K,EAASZ,MAAMC,OAAOvF,KAAOxD,EAAMd,SAASgB,KAAKgD,IACjDoM,EAAUtP,EAAMd,SAASoQ,SAGzBA,GAAWrD,kBAAQjM,EAAML,UAAUgK,QAAQ2F,UAAYtP,EAAML,UAAUgK,QAAQ2F,QAAQ,GACvFkF,EAAU9K,EAASZ,MAAMC,OAAOvF,IAE7B,CACJtD,KAAOF,EAAMd,SAASgB,KACtBsU,UACAlF,UACAD,OAASrP,EAAML,UAAUgK,QAAQ0F,WAkDpC/D,4BAAiB,SAACpL,EAAMsU,GAAP,OA5BP,SAAC,GAAqB,IAApBtU,EAAmB,EAAnBA,KAAMsU,EAAa,EAAbA,QAClB,OAAgB,OAAZA,EACO,CACH,CACAlE,WAAa,QACbC,IAAMiE,EACN1D,QAAU,WAEd,CACIR,WAAa,QACbC,IAAMiE,EACNhE,eAAiB,CAAC,CAACF,WAAa,WAChCQ,QAAU,WAGX,CACH,CACIR,WAAa,QACbC,IAAMrQ,EAAKgD,IACXsN,eAAiB,CAAC,CAACF,WAAa,WAChCQ,QAAU,WAQkB2D,CAAMvU,MAF/BJ,CAGTyU,IClDSG,GAvBI,WACf,OACQ,eAAC,WAAD,WACE,eAAC5T,EAAA,EAAD,CAAM6T,UAAQ,EAAd,UACE,cAAC/P,EAAA,EAAD,CAAQ/C,KAAK,OAAOgQ,UAAQ,EAACnP,UAAQ,EAAC8B,MAAM,OAAOlC,QAAQ,YAC3D,cAACxB,EAAA,EAAKC,KAAN,CAAWW,GAAImB,IAASjB,GAAG,kBAA3B,oBACA,cAACd,EAAA,EAAKC,KAAN,CAAWW,GAAImB,IAASjB,GAAG,kBAA3B,sBACA,cAACd,EAAA,EAAKC,KAAN,CAAWW,GAAImB,IAASjB,GAAG,kBAA3B,0BAEF,cAACuJ,EAAA,EAAKoG,IAAN,IACA,eAACzQ,EAAA,EAAD,CAAM6T,UAAQ,EAAd,UACE,cAAC/P,EAAA,EAAD,CACE/C,KAAK,WACLgQ,UAAQ,EACRnP,UAAQ,EACR8B,MAAM,OACNlC,QAAQ,YAEV,cAACxB,EAAA,EAAKC,KAAN,CAAWW,GAAImB,IAASjB,GAAG,oBAA3B,+BCfVmG,GAAWC,6BAAkB,CACjC4M,aAAe3M,sBAAW,CAACC,QAAQ,gCACnC2M,aAAeC,6BACb7M,sBAAW,CAACC,QAAU,mCACtB6M,wBAAa,eAAbA,CAA6B,CAC3B7M,QAAS,2BAHE4M,KA0EF/J,eAAU,CAAEC,KAAM,UAAYjD,aAA9BgD,EAjEC,SAAC,GAA+E,IAA7E5E,EAA4E,EAA5EA,MAAOiD,EAAqE,EAArEA,aAAc4L,EAAuD,EAAvDA,eAAgBC,EAAuC,EAAvCA,WAAY5I,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAC5E,OACE,eAAClI,EAAA,EAAD,WACE,cAACQ,EAAA,EAAD,CAAQ2H,UAAQ,EAAC9I,KAAK,QAAQnB,QAAQ,YACtB,YAAd2S,GACF,gCACE,cAACrQ,EAAA,EAAD,CAAQJ,MAAM,OAAO6E,KAAG,EAAC/G,QAAQ,oBACjC,8EACA,eAAC+D,EAAA,EAAD,CAAM8C,SAAUC,EAAa4L,GAA7B,UACE,cAAC1O,EAAA,EAAD,CACE+E,MAAO,EACPrI,KAAK,eACLvC,KAAK,WACLc,SAAS,OACTiL,QAAQ,EACRlD,UAAWvD,GACXQ,OAAO,EACPN,YAAY,iBAEd,cAACK,EAAA,EAAD,CACE+E,MAAO,EACPrI,KAAK,eACLvC,KAAK,WACL+L,QAAQ,EACRjG,OAAO,EACPhF,SAAS,OACT+H,UAAWvD,GACXE,YAAY,qBAEbE,GACC,cAAC5B,EAAA,EAAD,CAAOgC,OAAK,EAAC/B,MAAM,MAAnB,SACG2B,IAGL,cAACuG,GAAA,EAAD,IACA,cAACrK,EAAA,EAAD,CAAQoB,KAAK,QAAQ8F,UAAQ,EAACjH,QAAQ,kBAAkBqK,SAAUN,GAAYC,UAGnE,gBAAd2I,GAED,gCACE,cAACrQ,EAAA,EAAD,CAAQJ,MAAM,OAAO6E,KAAG,EAAC/G,QAAQ,qBACjC,sFACA,eAACD,EAAA,EAAD,CAAQ5B,KAAK,SAAS+D,MAAM,WAA5B,UACE,cAACS,EAAA,EAAD,CAAMjC,KAAK,aADb,uBAMO,cAAdiS,GAEK,gCACE,cAACrQ,EAAA,EAAD,CAAQJ,MAAM,OAAO6E,KAAG,EAAC/G,QAAQ,mBACjC,oFACA,eAACD,EAAA,EAAD,CAAQ5B,KAAK,SAAS+D,MAAM,cAA5B,UACE,cAACS,EAAA,EAAD,CAAMjC,KAAK,gBADb,2BC5DFkS,G,uKACQ,IAAD,OACL,OACG,eAAC/J,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAApB,UACG,cAAC,IAAD,CAAO0E,KAAK,kBAAkBoF,OAAQ,kBAAK,cAAC,GAAD,CAAO5M,cAAe,EAAKnG,MAAMkN,aAC5E,cAAC,IAAD,CAAOS,KAAK,kBAAkBoF,OAAQ,kBAAM,cAAC,GAAD,CAASnJ,cAAe,EAAK5J,MAAM4J,mBAC/E,cAAC,IAAD,CAAO+D,KAAK,kBAAkBzG,UAAW8L,KACzC,cAAC,IAAD,CAAOrF,KAAK,oBAAoBoF,OAAQ,kBAAI,cAAC,GAAD,CAASH,eAAgB,EAAK5S,MAAM4S,eAC9EC,WAAc,EAAK7S,MAAM6S,mBAK9B,cAAC9J,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACG,cAAC,GAAD,a,GAfalI,IAAMC,WA2BtBrD,sBANS,SAAAC,GACpB,MAAO,CACHiV,WAAcjV,EAAMd,SAASgB,KAAKmV,aAAa,GAAGJ,WAClD3F,QAAUtP,EAAMd,SAASoQ,WAGM,CAAC0F,evCiCV,SAAAM,GAAW,8CAAI,WAAOlV,EAAUC,EAAjB,sBAAAC,EAAA,6DAA4BC,EAA5B,EAA4BA,YAA5B,EAAyCC,aAC5EtB,EAAWqB,IADwB,SAGjCN,EAAOf,EAASgB,OAAO4J,YAHU,SAI/B7J,EAAK+U,eAAeM,EAAYV,cAJD,OAKrCxU,EAASmV,YAAM,YALsB,gDAQrC7U,QAAQC,IAAR,MARqC,yDAAJ,2DuCjCeqL,kBAAzCjM,CAAyDmV,ICXzDM,G,uKArBP,OACQ,cAACpR,EAAA,EAAD,CAAS1B,UAAQ,EAACgM,UAAU,SAASiG,UAAQ,EAACzL,UAAU,WAAxD,SACA,eAACvG,EAAA,EAAD,CAAWnB,MAAI,EAAf,UACE,eAACoD,EAAA,EAAD,CAASlD,GAAG,KAAKgB,UAAQ,EAAzB,UACE,cAACzB,EAAA,EAAD,CACEwC,KAAK,UACLrC,IAAI,mBACJ2B,IAAI,OACJR,MAAO,CAAEkT,aAAc,MAL3B,cASA,eAACpT,EAAA,EAAD,CAAQoB,KAAK,OAAOf,UAAQ,EAAChB,GAAIC,IAAMC,GAAG,aAA1C,wBAEE,cAACqD,EAAA,EAAD,CAAMjC,KAAK,cAAcN,UAAQ,gB,GAhB/BS,IAAMC,WCDtBsS,G,uKACQ,IAAD,OACL,OACG,wBAAQ5T,QAAS,kBAAI,EAAKM,MAAMJ,UAAU,cAA1C,4B,GAHQmB,IAAMC,WAOVrD,qBAAQ,KAAK,CAACiC,aAAdjC,CAA0B2V,I,UCO1B3V,qBAAQ,KAAK,CAACoC,cAAdpC,EAZG,SAACqC,GACf,OACI,eAACuT,GAAA,EAAD,CAAOC,UAAU,QAAQC,MAAM,EAAMC,QAAS,kBAAI1T,EAAMD,cAAxD,UACA,cAACwT,GAAA,EAAM/Q,OAAP,yBACA,cAAC+Q,GAAA,EAAMhR,QAAP,UACE,cAACgR,GAAA,EAAM7Q,YAAP,UACE,4ECMG/E,qBAAQ,KAAK,CAACgW,Y3C8BF,SAAAC,GAAgB,8CAAI,WAAO5V,EAAUC,EAAjB,0BAAAC,EAAA,6DAA4BC,EAA5B,EAA4BA,YAAaC,EAAzC,EAAyCA,aAC9EtB,EAAWqB,IACXZ,EAAYa,IAFyB,kBAIvBtB,EAAS+W,MAAM,CAC3BC,SAAWF,EACXvV,KAAO,UAN4B,YAIpCR,EAJoC,QAS9BkW,mBAAmBC,UATW,kCAU7BzW,EAAU2Q,WAAW,SAASC,IAAItQ,EAAKA,KAAKiD,KAAKqH,IAAI,CACvD9I,YAAcxB,EAAKqP,QAAQ7N,YAC3BJ,SAAWpB,EAAKqP,QAAQ+G,UACxBC,UAAY3W,EAAU4S,WAAWC,oBAbF,QAgBvCpS,EAAS,CAACK,KAAO,gBAhBsB,wDAmBjC,IAAI8V,IAAgB,CACtBC,OAAS,KAAMtO,UApBoB,0DAAJ,4D2C9B5BnI,EAdK,SAACqC,GACjB,OACI,gCACE,eAACC,EAAA,EAAD,CAAQ5B,KAAK,SAAS8B,MAAO,CAAEkT,aAAc,QAAUtD,OAAK,EAAC3N,MAAM,WAAW1C,QAAS,kBAAIM,EAAM2T,YAAY,aAA7G,UACE,cAAC9Q,EAAA,EAAD,CAAMjC,KAAK,aADb,0BAIA,eAACX,EAAA,EAAD,CAAQ5B,KAAK,SAAS0R,OAAK,EAAC3N,MAAM,cAAc1C,QAAS,kBAAIM,EAAM2T,YAAY,WAA/E,UACE,cAAC9Q,EAAA,EAAD,CAAMjC,KAAK,gBADb,6BC0BKlD,qBAAQC,kBAAQ,KAAK,CAAC0W,M5CnChB,SAAAC,GAAI,8CAAI,WAAOtW,EAAUC,EAAjB,oBAAAC,EAAA,6DAA4BC,EAA5B,EAA4BA,YAA5B,EAAyCC,aAC5DtB,EAAWqB,IADQ,kBAGhBrB,EAASgB,OAAOyW,2BAA2BD,EAAKE,MAAOF,EAAKG,UAH5C,OAIrBzW,EAAS,CAACK,KAAO,gBAJI,sDAOf,IAAI8V,IAAgB,CACxBC,OAAS,kBARU,yDAAJ,6D4CmCoBzL,YAAU,CAACC,KAAK,cAA9ClL,EA5BG,SAACsC,GACjB,OACE,eAACiE,EAAA,EAAD,CAAMF,OAAK,EAAC1C,KAAK,QAAQ0F,SAAU/G,EAAMgH,aAAahH,EAAMqU,OAA5D,UACE,eAACrS,EAAA,EAAD,WACE,cAACkC,EAAA,EAAD,CACEtD,KAAK,QACLsG,UAAWvD,GACXtF,KAAK,OACLwF,YAAY,kBAEd,cAACK,EAAA,EAAD,CACEtD,KAAK,WACLsG,UAAWvD,GACXtF,KAAK,WACLwF,YAAY,aAEb7D,EAAM+D,OAAS,cAAC5B,EAAA,EAAD,CAAOgC,OAAK,EAAC/B,MAAM,MAAnB,SAA0BpC,EAAM+D,QAChD,cAAC9D,EAAA,EAAD,CAAQ8P,OAAK,EAAC1O,KAAK,QAAQe,MAAM,OAAjC,sBAKF,cAACkI,GAAA,EAAD,CAASnH,YAAU,EAAnB,gBACA,cAAC,GAAD,UC1BAuR,GAAU,CAAC3U,cAEX4U,G,uKAEE,OACI,eAACpB,GAAA,EAAD,CACIlS,KAAK,OACLoS,MAAM,EACNC,QAAS7S,KAAKb,MAAMD,WAHxB,UAKI,cAACwT,GAAA,EAAM/Q,OAAP,gCAGA,cAAC+Q,GAAA,EAAMhR,QAAP,UACI,cAACgR,GAAA,EAAM7Q,YAAP,UACI,cAAC,GAAD,e,GAbC1B,aAqBVrD,qBAAQ,KAAM+W,GAAd/W,CAAuBgX,ICkBvBjX,qBAAQC,kBAAQ,KAAK,CAACiX,O9CpBf,SAAAN,GAAI,8CAAI,WAAOtW,EAAUC,EAAjB,4BAAAC,EAAA,6DAA4BC,EAA5B,EAA4BA,YAAaC,EAAzC,EAAyCA,aAC7DtB,EAAWqB,IACXZ,EAAYa,IAFQ,kBAIEtB,EAASgB,OAAO+W,+BAA+BP,EAAKE,MAAOF,EAAKG,UAJlE,cAIrBK,EAJqB,gBAKnBA,EAAejX,KAAK+L,cAAc,CACpCvK,YAAciV,EAAKjV,cANE,cAQrB0V,EAAU,CACV1V,YAAciV,EAAKjV,YACnB6U,UAAY3W,EAAU4S,WAAWC,mBAVZ,UAYnB7S,EAAU2Q,WAAW,SAASC,IAAI2G,EAAejX,KAAKiD,KAAKqH,IAA3D,eAAmE4M,IAZhD,QAazB/W,EAAS,CAACK,KAAO,gBAbQ,wDAgBhB,IAAI8V,IAAgB,CACxBC,OAAS,KAAMtO,UAjBK,0DAAJ,6D8CoBoB6C,YAAU,CAACC,KAAK,iBAA/ClL,EAnCM,SAACsC,GACpB,OACE,8BACE,eAACiE,EAAA,EAAD,CAAM5C,KAAK,QAAQ0F,SAAU/G,EAAMgH,aAAahH,EAAM4U,QAAtD,UACE,eAAC5S,EAAA,EAAD,WACE,cAACkC,EAAA,EAAD,CACEtD,KAAK,cACLvC,KAAK,OACL6I,UAAWvD,GACXE,YAAY,aAEd,cAACK,EAAA,EAAD,CACEtD,KAAK,QACLvC,KAAK,OACL6I,UAAWvD,GACXE,YAAY,UAEd,cAACK,EAAA,EAAD,CACEtD,KAAK,WACLvC,KAAK,WACL6I,UAAWvD,GACXE,YAAY,aAEb7D,EAAM+D,OAAS,cAAC5B,EAAA,EAAD,CAAOgC,OAAK,EAAC/B,MAAM,MAAnB,SAA0BpC,EAAM+D,QAChD,cAAC9D,EAAA,EAAD,CAAQ8P,OAAK,EAAC1O,KAAK,QAAQe,MAAM,OAAjC,yBAIF,cAACkI,GAAA,EAAD,CAASnH,YAAU,EAAnB,gBACA,cAAC,GAAD,YClCFuR,GAAU,CAAC3U,cAEXiV,G,uKAEE,OACI,eAACzB,GAAA,EAAD,CACIlS,KAAK,OACLoS,MAAM,EACNC,QAAS7S,KAAKb,MAAMD,WAHxB,UAKI,cAACwT,GAAA,EAAM/Q,OAAP,mCAGA,cAAC+Q,GAAA,EAAMhR,QAAP,UACI,cAACgR,GAAA,EAAM7Q,YAAP,UACI,cAAC,GAAD,e,GAbI1B,aAqBbrD,qBAAQ,KAAM+W,GAAd/W,CAAuBqX,ICxBhCC,G,uKAEF,IAKIC,EALEC,EAAe,CACjBC,aACAT,cACAK,kBAGJ,GAAInU,KAAKb,MAAMqV,aAAc,CACzB,IAAMC,EAAiBH,EAAatU,KAAKb,MAAMqV,aAAaE,WAC5DL,EAAgB,cAACI,EAAD,eAAoBzU,KAAKb,MAAMqV,aAAaG,aAEhE,OACI,+BACKN,Q,GAdenU,IAAMC,WAwBnBrD,sBALS,SAAAC,GACpB,MAAO,CACHyX,aAAezX,EAAM6X,UAGd9X,CAAyBsX,ICblCS,G,uKACM,IAAD,OACT,OACE,eAAC,WAAD,WAEI,cAAC,GAAD,IACA,cAAC,IAAD,CAAOhV,OAAK,EAACiN,KAAK,IAAIzG,UAAWkM,KACjC,cAAC,IAAD,CAAOzF,KAAK,QAAQoF,OAAQ,kBAC1B,eAAC,WAAD,WAEE,cAAC,EAAD,IACA,cAACxS,EAAA,EAAD,CAAWuG,UAAU,OAArB,SACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6G,KAAK,aAAazG,UAAW4B,KACpC,cAAC,IAAD,CAAO6E,KAAK,QAAQzG,UAAWoM,KAC/B,cAAC,IAAD,CAAO3F,KAAK,YAAYzG,UAAW4L,KACnC,cAAC,IAAD,CAAOnF,KAAM,CAAC,eAAe,oBAAqBzG,UAAWnB,KAC7D,cAAC,IAAD,CAAO4H,KAAK,cAAczG,UAAWmK,KACrC,cAAC,IAAD,CAAO1D,KAAK,eAAezG,UAAWiL,KACtC,cAAC,IAAD,CAAOjL,UAAWyO,OAPP,EAAK3V,MAAM4V,SAASlQ,oB,GAZ3B3E,IAAMC,WA+BTxC,eAAWkX,I,6BC5CpBG,GAAc,G,UCMLC,6BAAgB,CAC3BvY,UAAYwY,oBACZjZ,SAAWkZ,kBACXtS,ODRyB,WAAkC,IAAjC9F,EAAgC,uDAAxBiY,GAAaI,EAAW,uCAC1D,OAAQA,EAAO5X,MACX,IAAK,YAQD,MAAM,GAAN,oBAAWT,GAAX,CAAkBqY,EAAOnW,UAE7B,IAAK,eACF,OAAO,aAAIlC,EAAM4J,QAAO,SAAAC,GAAI,OAAGA,EAAKrG,IAAM6U,EAAOnW,YAEpD,IAAK,eACD,OAAO,aAAIlC,EAAM+D,KAAI,SAAA8F,GAAI,OAAIA,EAAKrG,IAAM6U,EAAOnW,QAAQsB,GAAK6U,EAAOnW,QAAU2H,MAEjF,QACI,OAAO7J,ICVfgL,KAAOsN,KACPT,OCdyB,WAA2B,IAA1B7X,EAAyB,uDAAjB,KAAMqY,EAAW,uCACnD,OAAQA,EAAO5X,MACX,IAAK,aACD,IAAOkX,EAAaU,EAAOnW,QAC3B,MAAO,CAAEyV,aAEb,IAAK,cACD,OAAO,KAEX,QACI,OAAO3X,IDKf2I,OAAQ4P,WACRC,MlCeW,WAAgE,IAA1CxY,EAAyC,uDAAjC6L,GAAiC,yCAAjBpL,EAAiB,EAAjBA,KAAMyB,EAAW,EAAXA,QACjE,OAAQzB,GACN,KAAKgL,GACH,OAAO,2BACFzL,GADL,IAEE8L,SAAS,EACT3F,MAAO,OAEX,KAAKuF,GACH,OAAO,2BACF1L,GADL,IAEE8L,SAAS,IAEb,KAAKH,GACH,OAAO,2BACF3L,GADL,IAEE8L,SAAS,EACT3F,MAAOjE,IAEX,KAAK0J,GACH,OAAO,2BACF5L,GADL,IAEE+L,aAAa,IAEjB,QACE,OAAO/L,M,UoCrCPyY,I,OAAQC,sBAAYC,GACxBC,8BACMC,0BAAgBC,KAAMC,kBAAkB,CAAEvY,6BAAcD,6BACxDyY,0BAAeC,MAQjBC,GAAW,CACbha,aACAia,OAPkB,CAChBC,YAAa,QACbC,wBAAwB,EACxBC,sBAAsB,GAINL,WAClB7Y,SAAUqY,GAAMrY,SAChBmZ,oDAGF,SAASC,GAAT,GAAqC,IAAbC,EAAY,EAAZA,SAChBvZ,EAAOwZ,uBAAY,SAAA1Z,GAAK,OAAIA,EAAMd,SAASgB,QACjD,OAAKyZ,mBAASzZ,GACHuZ,EADiB,oDAG9BG,IAASzE,OACP,cAAC,WAAD,CAAUsD,MAAOA,GAAjB,SACA,cAAC,6BAAD,2BAAgCS,IAAhC,aACE,cAAC,IAAD,UACA,eAACM,GAAD,WACE,cAAC,KAAD,CACExY,SAAS,eACT6Y,aAAa,SACbC,cAAc,YAEhB,cAAC,GAAD,cAMNC,SAASC,eAAe,W","file":"static/js/main.28d2d92c.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth'\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAT_a-8zLqaooqBhikXEH1MJ6m8r-39ZQM\",\n    authDomain: \"revent-72a9c.firebaseapp.com\",\n    projectId: \"revent-72a9c\",\n    storageBucket: \"revent-72a9c.appspot.com\",\n    messagingSenderId: \"752217483559\",\n    appId: \"1:752217483559:web:063f3db3a1e25174f56102\",\n    measurementId: \"G-NJ3TE4MHED\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({timestampInSnapshots : true});\nexport default firebase;","import React from 'react';\nimport { Menu, Image, Dropdown } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\nimport {compose} from 'redux'\nconst SignedInLink = ({signOut, user, history}) =>{\n \n  return (\n    <Menu.Item position='right'>\n      <Image avatar spaced='right' src={user.photoURL || 'assets/user.png'} />\n      <Dropdown pointing='top left' text={user.displayName || 'user'}>\n        <Dropdown.Menu>\n          <Dropdown.Item\n            as={Link}\n            to='/createEvent'\n            text='Create Event'\n            icon='plus'\n          />\n          <Dropdown.Item as={Link}  text='My Events' icon='calendar' />\n          <Dropdown.Item as={Link}  text='My Network' icon='users' />\n          <Dropdown.Item as={Link}  text='My profile' icon='user' />\n          <Dropdown.Item as={Link}  to='/settings/basic' text='My account' icon='settings' />\n          <Dropdown.Item\n            text='Sign out'\n            icon='power'\n            onClick={()=> {\n              signOut();\n              history.push('/');\n            }}\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n    </Menu.Item>\n  );\n}\nconst mapStateToProps = state => {\n  \n  return {\n    user : state.firebase.auth\n  }\n}\nexport default compose(connect(mapStateToProps,{signOut}),withRouter)(SignedInLink);","import {SubmissionError, reset} from 'redux-form';\nexport const logIn = cred => async (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    try {\n       await firebase.auth().signInWithEmailAndPassword(cred.email, cred.password);\n        dispatch({type : 'CLOSE_MODAL'});\n    }\n    catch (error) {\n        throw new SubmissionError({\n          _error : 'log in failed'\n        })\n    }\n}\n\nexport const signOut = () => async (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    try {\n       await firebase.auth().signOut();\n        \n        dispatch({type : 'CLOSE_MODAL'});\n    }\n    catch (error) {\n        console.log(error);\n    }\n}\n\nexport const signIn = cred => async (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    try {\n     let userCredential = await firebase.auth().createUserWithEmailAndPassword(cred.email, cred.password);\n     await userCredential.user.updateProfile({\n         displayName : cred.displayName\n     })\n     let newUser = {\n         displayName : cred.displayName,\n         createdAt : firestore.FieldValue.serverTimestamp()\n     }\n     await firestore.collection('users').doc(userCredential.user.uid).set({...newUser})\n     dispatch({type : 'CLOSE_MODAL'});\n    }\n    catch (error) {\n        throw new SubmissionError({\n          _error : error.message    \n    })\n    }\n}\nexport const socialLogin = selectedProvider => async (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    try {\n       let user = await firebase.login({\n            provider : selectedProvider,\n            type : 'popup'\n        });\n        // console.log(user.additionalUserInfo);\n        if (user.additionalUserInfo.isNewUser) {\n            await firestore.collection('users').doc(user.user.uid).set({\n                displayName : user.profile.displayName,\n                photoURL : user.profile.avatarUrl,\n                createdAt : firestore.FieldValue.serverTimestamp()\n            })\n        }\n        dispatch({type : 'CLOSE_MODAL'});\n    }\n    catch(error) {\n        throw new SubmissionError({\n            _error : error.message\n        })\n    }\n}\nexport const updatePassword = newPassword => async (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    try {\n        let user = firebase.auth().currentUser;\n        await user.updatePassword(newPassword.newPassword1);\n        dispatch(reset('account'));\n    }\n    catch (error) {\n        console.log(error);\n    }\n}","export const openModal = (modalDetails) => {\n    console.log(modalDetails);\n    return {\n        type: 'OPEN_MODAL',\n        payload: modalDetails\n    }\n}\nexport const closeModal = () => {\n    return {\n        type: 'CLOSE_MODAL'\n    }\n}","import React from 'react';\nimport { Menu, Button } from 'semantic-ui-react';\nimport {openModal} from '../../modals/modalsAction';\nimport {connect} from 'react-redux';\nfunction SignedOutLink(props) {\n  return (\n    <Menu.Item position='right'>\n      <Button  content='Login' onClick={()=>props.openModal('LoginModal')}/>\n      <Button\n        content='Register'\n        style={{ marginLeft: '0.5em' }}\n        onClick={()=>props.openModal('RegisterModal')}\n      />\n    </Menu.Item>\n  );\n}\nexport default connect(null,{openModal})(SignedOutLink)","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Menu } from 'semantic-ui-react';\nimport { NavLink } from \"react-router-dom\";\nimport SignedInLink from './SignedInLink';\nimport SignedOutLink from './SignedOutLink';\nimport { connect } from 'react-redux';\nclass Navbar extends React.Component {\n    render() {\n        return (\n               <Menu inverted>\n                 <Container>\n                   <Menu.Item header as={NavLink} exact to='/'>\n                     <img src=\"assets/logo.png\" alt=\"logo\" />\n                     Re-vents\n                   </Menu.Item>\n                   <Menu.Item as={NavLink} to='/Dashboard' name=\"Events\" />\n                   {/*\n                   <Menu.Item  as={NavLink} to='/test'>\n                     <Button floated=\"right\" positive inverted content=\"Test\" />\n                   </Menu.Item> */}\n                 \n                   {this.props.user.uid ? <SignedInLink user={this.props.user}/> :  <SignedOutLink />}\n                   \n                 </Container>\n               </Menu>\n        )\n    }\n}\nconst mapStateToProps = state => {\n  return {\n    user : state.firebase.auth\n  }\n}\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\nclass NotificationMain extends React.Component {\n    render() {\n        return (\n            <div>\n                notifications\n            </div>\n        )\n    }\n}\nexport default NotificationMain","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Image } from 'semantic-ui-react';\nclass EventAtendee extends React.Component {\n    render() {\n        const {attendee} = this.props\n        return (\n            <List.Item>\n            <Image as={Link} to={`/profile/${attendee.id}`} size='mini' circular src={attendee.photoURL} />\n        </List.Item>\n        )\n    }\n}\nexport default EventAtendee;","export const objectToArray = (object) => {\n    if (object) {\n        return Object.entries(object).map(e => Object.assign({},e[1],{id : e[0]}))\n    }\n}\nexport function getFileExtension(filename) {\n    return filename.slice((filename.lastIndexOf('.') -1 >>> 0) + 2);\n  }","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Icon, Item, List, Segment, Label } from 'semantic-ui-react';\nimport { format } from 'date-fns';\nimport { connect } from 'react-redux';\nimport EventAtendee from './EventAtendee';\nimport { objectToArray } from '../../util/helpers/helpers';\nclass EventInfo extends React.Component {\n    render() {\n      const {event} = this.props;\n        return (\n            <Segment.Group>\n            <Segment>\n            {event.isCancelled && <Label as='a' color='red' ribbon='right'>cancelled</Label>}\n              <Item.Group>\n                <Item>\n                  <Item.Image size='tiny' circular src={event.hostPhotoURL} />\n                  <Item.Content>\n                    <Item.Header \n                      as={Link}\n                      to={`/events/${event.id}`}    \n                     content={event.title} />\n                    <Item.Description\n                    >Hosted by <Link to={`profile/${event.hostedUid}`}>{event.hostedBy}</Link></Item.Description>\n                    \n                  </Item.Content>\n                </Item>\n              </Item.Group>\n            </Segment>\n            <Segment>\n              <span>\n                <Icon name='clock' />\n                {format(event.date.toDate(),'EEEE do LLLL')} at {' '}\n                {format(event.date.toDate(),'h:mm a')}\n\n                <Icon name='marker' /> {event.address}\n              </span>\n            </Segment>\n            <Segment secondary>\n              <List horizontal>\n                  {event.attendees && objectToArray(event.attendees).map((attendee) =>{\n                     return <EventAtendee  key={attendee.id} attendee={attendee}/> \n                   }) \n                 }\n              </List>\n            </Segment>\n            <Segment clearing>\n              <div>{event.description}</div>\n             \n              <Button\n                color='teal'\n                floated='right'\n                content='View'\n                as={Link} to={`/events/${event.id}`}\n              />\n            </Segment>\n          </Segment.Group>\n        )\n    }\n}\nexport default EventInfo","import React from 'react';\nimport EventInfo from './EventInfo';\nclass EventsList extends React.Component {\n    renderEvents = () => {\n        if ( this.props.events ){\n        return this.props.events.map(event => {\n            return <EventInfo key={event.id} event={event} />\n        })\n    }\n    }\n    render() {\n        return (\n           <div>\n             {this.renderEvents()}\n           </div>\n        )\n    }\n}\nexport default EventsList","import { Form, Label } from \"semantic-ui-react\";\n\nconst TextInput = ({input,type,placeholder,meta:{error,touched}}) => {\n    return (\n          <Form.Field error={touched && !!error}>\n        {touched && error ? (\n            <Label basic color='red'>{error}</Label>\n        ) : null}\n             <input {...input} placeholder={placeholder} type={type}/>\n       </Form.Field>\n    )\n}\nexport default TextInput;","import { Form, TextArea } from \"semantic-ui-react\";\n\nconst TextInput = ({input,type,placeholder,rows,meta:{error,touched}}) => {\n    return (\n          <Form.Field error={touched && !!error}>\n             <TextArea {...input} placeholder={placeholder} rows={rows}/>\n          </Form.Field>\n\n    )\n}\nexport default TextInput;","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport {Form, Label} from 'semantic-ui-react';\nimport 'react-datepicker/dist/react-datepicker.css'\nconst DateInput = ({input, placeholder, meta:{touched, error}, dateFormat,...rest}) => {\n    return (\n        <Form.Field error={touched && !!error}>\n            <DatePicker \n              {...rest}\n              placeholderText={placeholder}\n              selected={input.value? (Object.prototype.toString.call(input.value) !== '[object Date]')?\n              input.value.toDate():input.value : null}\n              onChange={input.onChange}\n            //   onBlur={input.onBlur}\n              dateFormat = {dateFormat}\n              showTimeSelect\n              // showFourColumnMonthYearPicker\n              timeFormat='HH:mm'\n              onChangeRaw={(e)=>e.preventDefault()}\n            />\n             {touched && error ? (<Label basic color='red'>{error}</Label>) : null}\n        </Form.Field>\n    )\n}\nexport default DateInput","import { Form, Select } from \"semantic-ui-react\";\n\nconst SelectInput = ({input,type,placeholder,options,multiple,meta:{error,touched}}) => {\n    return (\n          <Form.Field error={touched && !!error}>\n             <Select placeholder={placeholder} \n                    //  onChange={input.value}\n                     value={input.value || null}\n                     onChange={(e, data)=>input.onChange(data.value)}\n                     options={options}\n                     multiple={multiple}/>\n          </Form.Field>\n\n    )\n}\nexport default SelectInput;","import React from 'react';\nimport cuid from 'cuid';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Button, Header, Segment, Form, MyTextInput, MySelectInput, categoryData, MyTextArea, MyPlaceInput, MyDateInput } from 'semantic-ui-react';\nimport { createEvent, updateEvent, cancelOrActiveEvent } from '../../store/actions/eventsAction';\nimport TextInput from '../../util/form/TextInput';\nimport TextArea from '../../util/form/TextArea';\nimport DateInput from '../../util/form/DateInput';\nimport SelectInput from '../../util/form/SelectInput';\nimport { combineValidators, isRequired } from 'revalidate';\nimport { withFirestore } from 'react-redux-firebase';\nimport { toastr } from 'react-redux-toastr';\nconst category = [\n    {key: 'drinks', text: 'Drinks', value: 'drinks'},\n    {key: 'culture', text: 'Culture', value: 'culture'},\n    {key: 'film', text: 'Film', value: 'film'},\n    {key: 'food', text: 'Food', value: 'food'},\n    {key: 'music', text: 'Music', value: 'music'},\n    {key: 'travel', text: 'Travel', value: 'travel'},\n];\nconst validate = combineValidators({\n  title : isRequired({message: 'the event title is required'}),\n  date : isRequired({message: 'the date is required'})\n})\nclass CreateEvent extends React.Component {\n    \n    onFormSubmit = async (values) => {\n       if(Object.keys(this.props.initialValues).length > 0) {\n         this.props.updateEvent(this.props.initialValues,values);\n         this.props.history.push(`/events/${this.props.initialValues.id}`)\n       }\n       else {\n        let event = await this.props.createEvent(values);\n         this.props.history.push(`/dashboard`);\n         toastr.success('Success', 'You added New Event');\n       }\n      }\n      async componentDidMount() {\n        let eventId = this.props.match.params.id;\n        let event =  await this.props.firestore.setListener(`events/${eventId}`);\n      }\n      async componentWillUnmount() {\n        let eventId = this.props.match.params.id;\n        await this.props.firestore.unsetListener(`events/${eventId}`);\n      }\n    render() {\n      \n        return (\n            <Segment clearing>\n                <Form className='ui form' onSubmit={this.props.handleSubmit(this.onFormSubmit)}>\n                  <Header sub color='teal' content='Event Details' />\n                  <Field \n                     name='title'\n                     component={TextInput}\n                     placeholder='Event Title'\n                     />\n                     <Field \n                     name='description'\n                     component={TextArea}\n                     placeholder='describe ur event'\n                     rows={5}\n                     />\n                       <Field \n                     name='address'\n                     component={TextInput}\n                     placeholder='your location'\n                     />\n                      <Field \n                     name='category'\n                     component={SelectInput}\n                     placeholder='choose the category'\n                     options = {category}\n                     multiple={false}\n                     />\n                      <Field \n                     name='date'\n                     component={DateInput}\n                     dateFormat=\"MMMM d, yyyy h:mm aa\"\n                     placeholder='event date'\n                     />\n                  <Button\n                    type='submit'\n                    floated='right'\n                    positive\n                    content='Submit'\n                  />\n                  <Button\n                    floated='right'\n                    content='Cancel'\n                    onClick={this.props.initialValues?()=>this.props.history.push(`/events/${this.props.initialValues.id}`):()=>{this.props.history.push('/dashboard')}}\n                  />\n                  {Object.keys(this.props.initialValues).length > 0 && \n                  <Button\n                    floated='left'\n                    content = {this.props.event.isCancelled? 'Reactive the event' : 'Cancel the event'}\n                    color = {this.props.event.isCancelled? 'green' : 'red'}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      this.props.cancelOrActiveEvent(this.props.event);} }\n                  />\n                  }\n                </Form>\n          </Segment>\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n  \n   const eventId = ownProps.match.params.id;\n   let event = {};\n   \n     \n   if (state.firestore.ordered.events && state.firestore.ordered.events.length > 0) {\n     event = state.firestore.ordered.events.filter(elem => elem.id === eventId)[0] || {};\n   }\n   return {\n     initialValues : event,\n     event\n   }\n}\nexport default withFirestore(connect(mapStateToProps,{createEvent, updateEvent, cancelOrActiveEvent})(reduxForm({form:'eventForm',enableReinitialize: true, validate})(CreateEvent)));","import {toastr} from 'react-redux-toastr';\nexport const createEvent = event => async (dispatch,getState,{getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const currentUser = firebase.auth().currentUser;\n    const newEvent = {...event,\n      hostedBy: currentUser.displayName,\n      hostedUid : currentUser.uid,\n      hostPhotoURL: currentUser.photoURL,\n      created : new Date(),\n      attendees : {\n          [currentUser.uid] : {\n              going : true,\n              joinDAte : new Date(),\n              photoURL : currentUser.photoURL,\n              displayName : currentUser.displayName,\n              host : true\n          }\n      }}\n    try {\n       let createdEvent = await firestore.add('events', newEvent)  \n       await firestore.set(`event_attendee/${createdEvent.id}_${currentUser.uid}`,{\n           eventId : createdEvent.id,\n           userId : currentUser.uid,\n           eventDate : event.date,\n           host : true\n       });\n       return createdEvent\n    }\n    catch(error) {\n        console.log(error);\n    }\n}\n\nexport const updateEvent = (event, newData) =>async (dispatch, getState, {getFirebase,getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    try {\n        await firestore.update(`events/${event.id}`,{...newData})\n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const cancelOrActiveEvent = (event) => async (dispatch, getState,{getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const message = event.isCancelled ? 'Are you sure you want to reactive the event' : 'Are you sure you want to cancel the evnet'; \n    const cancelled = event.isCancelled ? false : true;\n    try {\n        toastr.confirm(message,{\n            onOk :async () => await firestore.update(`events/${event.id}`,{isCancelled : cancelled})})\n        \n    }catch(error) {\n        console.log(error);\n    }\n}\nexport const addAttendee = (event) => async (dispatch, getState, {getFirebase, getFirestore}) =>{\n    const firestore = getFirestore();\n    const firebase = getFirebase();\n    const user = firebase.auth().currentUser;\n    let newAttendee = {\n       displayName : getState().firebase.profile.displayName,\n       going : true,\n       host : false,\n       photoURL : getState().firebase.profile.photoURL || 'assets/user.png',\n       joinDAte : firestore.FieldValue.serverTimestamp()\n    }           \n      try {\n          await firestore.update(`events/${event.id}`,{\n          [`attendees.${user.uid}`] : newAttendee\n          });\n          await firestore.set(`event_attendee/${event.id}_${user.uid}`,{\n              eventId : event.id,\n              userId : user.uid,\n              eventDate : event.date,\n              host : false\n          });\n          toastr.success('Success', 'You have joined the event');\n      }   catch(error) {\n          console.log(error);\n          toastr.error('Oops', 'Problem signing up to the event');\n      } \n}\nexport const cancelMyPlace = event => async (dispatch,getState,{getFirebase,getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const user = firebase.auth().currentUser;\n    try {\n        await firestore.update(`events/${event.id}`,{\n            [`attendees.${user.uid}`] : firestore.FieldValue.delete()\n        });\n        await firestore.delete(`event_attendee/${event.id}_${user.uid}`);\n        toastr.success('Success', 'You have cancelled your Place');\n    }catch(error) {\n        console.log(error);\n        toastr.error('Oops', 'Something went wrong')\n    }\n\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport NotificationMain from './NotificationMain';\nimport EventsList from '../events/EventsList';\nimport { Button, Grid } from 'semantic-ui-react'\nimport CreateEvent from '../events/createEvent';\nimport cuid from \"cuid\";\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nclass Dashboard extends React.Component {\n    render() {\n        const { events } = this.props;\n        return (\n            // <div>\n            //     <EventsList />\n            //     <NotificationMain />\n            // </div>\n            <Grid>\n                <Grid.Column width= {10}>\n                   <EventsList events={events}/>\n                </Grid.Column>\n                <Grid.Column width= {6}>\n                  \n                </Grid.Column>\n            </Grid>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        events : state.firestore.ordered.events\n    }\n}\nexport default compose(firestoreConnect(()=>['events']),connect(mapStateToProps))(Dashboard)","import { Form, Radio} from 'semantic-ui-react'\nconst RadioInput = ({input, label, type}) => {\n   return (\n       <Form.Field>\n            <div className='ui radio'>\n              <input {...input}\n                     type={type}                \n              />{' '}\n              <label>{label}</label>\n            </div>\n          \n       </Form.Field>\n   )\n}\nexport default RadioInput","const ASYNC_ACTION_START = 'ASYNC_ACTION_START';\nconst ASYNC_ACTION_FINISH = 'ASYNC_ACTION_FINISH';\nconst ASYNC_ACTION_ERROR = 'ASYNC_ACTION_ERROR';\nexport const APP_LOADED = 'APP_LOADED';\n\nexport function asyncActionStart() {\n  return {\n    type: ASYNC_ACTION_START,\n  };\n}\n\nexport function asyncActionFinish() {\n  return {\n    type: ASYNC_ACTION_FINISH,\n  };\n}\n\nexport function asyncActionError(error) {\n  console.log(error);\n  return {\n    type: ASYNC_ACTION_ERROR,\n    payload: error,\n  };\n}\n\nconst initialState = {\n  loading: false,\n  error: null,\n  initialized: false,\n};\n\nexport default function asyncReducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case ASYNC_ACTION_START:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    case ASYNC_ACTION_FINISH:\n      return {\n        ...state,\n        loading: false,\n      };\n    case ASYNC_ACTION_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: payload,\n      };\n    case APP_LOADED:\n      return {\n        ...state,\n        initialized: true,\n      };\n    default:\n      return state;\n  }\n}\n","import firebase from '../../firebase/config/fbConfig';\nimport { reset } from \"redux-form\";\nimport {asyncActionStart ,asyncActionFinish } from \"../../async/asyncReducer\";\nimport {toastr} from 'react-redux-toastr';\nexport const updateProfile = user => async (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const {isEmpty, isLoaaded, ...updatedUser} = user;\n    try {\n       await firebase.updateProfile(updatedUser);\n       toastr.success('Success', 'Your profile has been updated');\n    }\n    catch(error) {\n        console.log(error);\n    }\n}\nexport function uploadToFirebaseStorage(file, filename) {\n    const user = firebase.auth().currentUser;\n    const storageRef = firebase.storage().ref();\n    return storageRef.child(`${user.uid}/user_images/${filename}`).put(file);\n}\nexport async function updateUserProfilePhoto(downloadURL, filename) {\n    const user = firebase.auth().currentUser;\n    const db = firebase.firestore();\n    const userDocRef = db.collection('users').doc(user.uid);\n    try {\n      const userDoc = await userDocRef.get();\n      if (!userDoc.data().photoURL) {\n        await db.collection('users').doc(user.uid).update({\n          photoURL: downloadURL,\n        });\n        await user.updateProfile({\n          photoURL: downloadURL,\n        });\n      }\n      return await db.collection('users').doc(user.uid).collection('photos').add({\n        name: filename,\n        url: downloadURL,\n      });\n    } catch (error) {\n      throw error;\n    }\n  }\n  \nexport const uploadProfileImage = (file, fileName) => async (dispatch, getState, {getFirebase, getFirestore}) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const user = firebase.auth().currentUser;\n    const path = `${user.uid}/user_images`;\n    const options = {\n        name : fileName\n    }\n    try {\n      dispatch(asyncActionStart())\n      let uploadedFile= await firebase.uploadFile(path, file, null, options );\n      let downloadUrl = await uploadedFile.uploadTaskSnapshot.ref.getDownloadURL();\n      let userDoc = await firestore.get(`users/${user.uid}`);\n      if (!userDoc.data().photoURL) {\n          await firebase.updateProfile({\n              photoURL : downloadUrl\n          });\n          await user.updateProfile({\n              photoURL : downloadUrl\n          })\n      }\n        await firestore.add({\n          collection : 'users',\n          doc : user.uid,\n          subcollections : [{collection : 'photos'}] \n      },{\n          name : fileName,\n          url: downloadUrl\n      })\n      dispatch(asyncActionFinish())\n\n    } catch(error) {\n        console.log(error);\n    }\n}\nexport const deletePhoto = (photo) => async (dispatch, getState,{getFirebase, getFirestore}) => {\n  const firebase = getFirebase();\n  const firestore = getFirestore();\n  const user = firebase.auth().currentUser;\n  try {\n    await firebase.deleteFile(`${user.uid}/user_images/${photo.name}`);\n    await firestore.delete({\n      collection : 'users',\n      doc : user.uid,\n      subcollections : [{\n        collection : 'photos',\n        doc : photo.id\n      }]\n    })\n  }catch(error) {\n    throw new Error('Something went wrong');\n  }\n}\nexport const setMainPhoto = photo => async (dispatch, getState,{getFirebase}) => {\n   const firebase = getFirebase();\n   const user = firebase.auth().currentUser;\n   try {\n       await firebase.updateProfile({\n         photoURL : photo.url\n       });\n       await user.updateProfile({\n         photoURL : photo.url\n       })\n   }catch(error) {\n     throw new Error('Something went wrong');\n   }\n}","import React, {Component} from 'react';\nimport {Segment, Form, Header, Divider, Button} from 'semantic-ui-react';\nimport {Field, reduxForm} from 'redux-form';\nimport DateInput from \"../../util/form/DateInput\";\n// import PlaceInput from \"../../../app/common/form/PlaceInput\";\nimport { connect } from 'react-redux';\nimport TextInput from '../../util/form/TextInput';\nimport RadioInput from '../../util/form/RadioInput'\nimport { updateProfile } from '../../store/actions/userAction';\nimport { compose } from 'redux';\nclass Basic extends Component {\n\n    render() {\n        const {pristine, submitting, handleSubmit, updateProfile} = this.props;\n        return (\n            <Segment>\n                <Header dividing size='large' content='Basics' />\n                <Form onSubmit={handleSubmit(updateProfile)}>\n                    <Field\n                        width={8}\n                        name='displayName'\n                        type='text'\n                        component={TextInput}\n                        placeholder='Known As'\n                    />\n                    <Form.Group inline>\n                      {/* todo: Gender Radio button */}\n                      <label>Gender</label>\n                      <Field\n                        name='gender'\n                        type='radio'\n                        component={RadioInput}\n                        value='male'\n                        label='male'\n                      />\n                       <Field \n                        name='gender'\n                        type='radio'\n                        component={RadioInput}\n                        value='female'\n                        label='female'\n                      />\n                    </Form.Group>\n                    <Field\n                      width={8}\n                      name='dateOfBirth'\n                      component={DateInput}\n                      dateFormat=\"MMMM d, yyyy h:mm aa\"\n                      placeholder='Date of Birth'\n                        // width={8}\n                        // name='dateOfBirth'\n                        // dateFormat=\"MMMM d, yyyy h:mm aa\"\n                        // component={DateInput}\n                        // placeholder='Date of Birth'\n                    />\n                    <Field\n                        name='city'\n                        placeholder='Home Town'\n                        options={{types: ['(cities)']}}\n                        label='Female'\n                        component={TextInput}\n                        width={8}\n                    />\n                    <Divider/>\n                    <Button disabled={pristine || submitting} size='large' positive content='Update Profile'/>\n                </Form>\n            </Segment>\n        );\n    }\n}\n\nexport default compose(connect(null,{updateProfile}),reduxForm({form: 'userProfile', enableReinitialize: true, destroyOnUnmount : false}))(Basic);","import React from 'react';\nimport { Button, Divider, Form, Header, Segment } from 'semantic-ui-react';\nimport { Field, reduxForm } from 'redux-form';\nimport RadioInput from '../../util/form/RadioInput';\nimport TextInput from '../../util/form/TextInput';\nimport TextArea from '../../util/form/TextArea';\nimport SelectInput from '../../util/form/SelectInput';\n\nconst interests = [\n  { key: 'drinks', text: 'Drinks', value: 'drinks' },\n  { key: 'culture', text: 'Culture', value: 'culture' },\n  { key: 'film', text: 'Film', value: 'film' },\n  { key: 'food', text: 'Food', value: 'food' },\n  { key: 'music', text: 'Music', value: 'music' },\n  { key: 'travel', text: 'Travel', value: 'travel' }\n];\n\nconst AboutMe = ({ pristine, submitting, handleSubmit, updateProfile }) => {\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"About Me\" />\n      <p>Complete your profile to get the most out of this site</p>\n      <Form onSubmit={handleSubmit(updateProfile)}>\n        <Form.Group inline>\n          <label>Tell us your status: </label>\n          <Field name=\"status\" component={RadioInput} type=\"radio\" value=\"single\" label=\"Single\" />\n          <Field\n            name=\"status\"\n            component={RadioInput}\n            type=\"radio\"\n            value=\"relationship\"\n            label=\"Relationship\"\n          />\n          <Field\n            name=\"status\"\n            component={RadioInput}\n            type=\"radio\"\n            value=\"married\"\n            label=\"Married\"\n          />\n        </Form.Group>\n        <Divider />\n        <label>Tell us about yourself</label>\n        <Field name=\"about\" component={TextArea} placeholder=\"About Me\" />\n        <Field\n          name=\"interests\"\n          component={SelectInput}\n          options={interests}\n          value=\"interests\"\n          multiple={true}\n          placeholder=\"Select your interests\"\n        />\n        <Field\n          width={8}\n          name=\"occupation\"\n          type=\"text\"\n          component={TextInput}\n          placeholder=\"Occupation\"\n        />\n        <Field\n          width={8}\n          name=\"origin\"\n          options={{ types: ['(regions)'] }}\n          component={TextInput}\n          placeholder=\"Country of Origin\"\n        />\n        <Divider />\n        <Button  size=\"large\" positive content=\"Update Profile\" />\n      </Form>\n    </Segment>\n  );\n};\nexport default reduxForm({ form: 'userProfile', enableReinitialize: true , destroyOnUnmount : false})(AboutMe);","// import React, {createRef} from 'react';\n// import Cropper from 'react-cropper';\n// import 'cropperjs/dist/cropper.css'; \n\n// class CropperInput extends React.Component {\n//     cropper = createRef();\n//     cropImage = () => {\n//     const {setImage} = this.props;\n//         if (typeof this.cropper.current.getCroppedCanvas() === 'undefined') {\n//             console.log('hello');\n//             return;\n//         }\n//         this.cropper.current.getCroppedCanvas().toBlob(blob => {\n//             setImage(blob);\n//         }, 'image/jpeg');\n//     }\n//   render() {\n    \n//     return (\n//       <Cropper\n//         ref={this.cropper}\n//         src={this.props.imagePreview}\n//         style={{height: 200, width: '100%'}}\n//         // Cropper.js options\n//         aspectRatio={1}\n//         preview='.img-preview'\n//         guides={false}\n//         viewMode={1}\n//         dragMode='move'\n//         scalable={true}\n//         cropBoxMovable={true}\n//         cropBoxResizable={true}\n//         crop={this.cropImage} />\n//     );\n// }\n// }\n// export default CropperInput\nimport React, {useRef} from 'react';\nimport Cropper from 'react-cropper';\nimport 'cropperjs/dist/cropper.css'; \n\nexport default function CropperInput({setImage, imagePreview}) {\n    const cropperRef = useRef(null);\n    const onCrop = () => {\n    const imageElement = cropperRef === null || cropperRef === void 0 ? void 0 : cropperRef.current;\n    const cropper = imageElement === null || imageElement === void 0 ? void 0 : imageElement.cropper;\n    cropper.getCroppedCanvas().toBlob(blob => {\n             setImage(blob)\n         }, 'image/jpeg');\n            };\n\n  return (\n    \n      <Cropper\n        ref={cropperRef}\n        src={imagePreview}\n        style={{height: 200, width: '100%'}}\n        // Cropper.js options\n        initialAspectRatio={1}\n        preview='.img-preview'\n        guides={false}\n        viewMode={1}\n        dragMode='move'\n        scalable={true}\n        cropBoxMovable={true}\n        cropBoxResizable={true}\n        crop={onCrop} />\n\n  );\n};\n","// import React, {useCallback} from 'react'\n// import {useDropzone} from 'react-dropzone'\n// import { Header, Icon } from 'semantic-ui-react';\n\n// const DropzoneInput = ({setFiles}) => {\n//   const onDrop = useCallback(acceptedFiles => {\n//     setFiles(acceptedFiles.map( file => Object.assign(file,{\n//       preview : URL.createObjectURL(file)\n//     })));\n//   }, [setFiles])\n//   const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop,\n//          multiple : false,\n//          accept : 'image/*'})\n\n//   return (\n//     <div {...getRootProps()} className={'dropzone ' + (isDragActive && 'dropzone--isActive')}>\n//       <input {...getInputProps()} />\n//       <Icon name='upload' size='huge'/>\n//       <Header content='Drop image here'/>\n//     </div>\n//   )\n// }\n// export default DropzoneInput\nimport React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport { Icon, Header } from 'semantic-ui-react'\n\nexport default function DropzoneInput({setFiles}) {\n  const dropzoneStyles = {\n     border: 'dashed 3px #eee',\n     borderRadius: '5%',\n     paddingTop: '30px',\n     textAlign: 'center'\n }\n\n const dropzoneActive = {\n     border: 'dashed 3px green'\n }\n\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n    })))\n  }, [setFiles])\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n  return (\n    <div {...getRootProps()} style={isDragActive ? {...dropzoneStyles, ...dropzoneActive} : dropzoneStyles}>\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop image here' />\n    </div>\n  )\n}\n","import React, { Fragment } from 'react';\nimport { Header, Card, Image, Button} from 'semantic-ui-react';\n\nimport { connect } from 'react-redux';\nconst UserPhotos = ({photos, profile, handleDeletingPhoto, handleSettingMainPhoto}) => {\n    return (\n        <Fragment>\n            <Header sub color='teal' content='All Photos'/>\n\n            <Card.Group itemsPerRow={5}>\n               <Card>\n                  <Image src={profile.photoURL || 'assets/user.png'}/>\n                  <Button positive>Main Photo</Button>\n                </Card>\n                {photos && photos.map(photo => {\n                    return (\n                          <Card key={photo.id}>\n                  \n                          <Image\n                              src={photo.url}\n                          />\n                          <div className='ui two buttons'>\n                              <Button basic color='green' onClick={()=>handleSettingMainPhoto(photo)}>Main</Button>\n                              <Button basic icon='trash' color='red' onClick={()=>handleDeletingPhoto(photo)} />\n                          </div>\n                      </Card>)\n                    })}\n              \n          </Card.Group>\n\n        </Fragment>\n    )\n}\nexport default connect(null)(UserPhotos);","import React, { useState, useEffect, Fragment } from 'react';\nimport {Image, Segment, Header, Divider, Grid, Button, Card} from 'semantic-ui-react';\nimport {toastr} from 'react-redux-toastr';\nimport CropperInput from './photos/CropperInput';\nimport DropzoneInput from './photos/DropzoneInput';\nimport {uploadProfileImage, deletePhoto, setMainPhoto} from '../../store/actions/userAction';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport UserPhotos from './photos/UserPhotos';\nimport cuid from 'cuid';\nimport { getFileExtension } from '../../util/helpers/helpers';\nconst MyPhotos = ({photos, profile,  uploadProfileImage, deletePhoto, setMainPhoto}) => {\n    const [files, setFiles] = useState([]);\n    const [image, setImage] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const handleUploadImage = async () => {\n      try {\n          await uploadProfileImage(image, files[0].name);\n          handleCancelCrop();\n          toastr.success('Success', 'The photo has been uploaded');\n      }catch(error) {\n        console.log(error);\n        toastr.error('Oops','Something went wrong')\n      }\n    }\n    const handleDeletingPhoto = async (photo) => {\n        try {\n          await deletePhoto(photo);\n          toastr.success('Success', 'The photo has been removed');\n        }catch(error) {\n          toastr.error('Oops', error.message);\n        }\n    }\n    const handleSettingMainPhoto = async (photo) => {\n      try {\n       await setMainPhoto(photo);\n      \n      }catch(error) {\n        toastr.error(error.message)\n      }\n    }\n    const handleCancelCrop = () => {\n    setFiles([]);\n    setImage(null);\n  }\n    \n    useEffect(() => {\n        return () => {\n            files.forEach(file => URL.revokeObjectURL(file.preview))\n        }\n    },[files])\n        return (\n            <Segment>\n                <Header dividing size='large' content='Your Photos' />\n                <Grid>\n                    <Grid.Row />\n                    <Grid.Column width={4}>\n                        <Header color='teal' sub content='Step 1 - Add Photo'/>\n                        <DropzoneInput setFiles={setFiles}/>\n                    </Grid.Column>\n                    <Grid.Column width={1} />\n                    <Grid.Column width={4}>\n                        <Header sub color='teal' content='Step 2 - Resize image' />\n                        {files.length > 0 &&\n                        <CropperInput setImage={setImage} imagePreview={files[0].preview} />}\n                    </Grid.Column>\n                    <Grid.Column width={1} />\n                    <Grid.Column width={4}>\n                        <Header sub color='teal' content='Step 3 - Preview and Upload' />\n                        {files.length > 0 &&\n                         <Fragment>\n                             <div\n                                className='img-preview' \n                                style={{minWidth : '200px', minHeight : '200px', overflow : 'hidden'}}/>\n                             <Button.Group>\n                                 <Button onClick={handleUploadImage} style={{width : '100px'}} \n                                   positive icon='check'/>\n                                 <Button onClick={handleCancelCrop} style={{width : '100px'}}\n                                   icon='close'/>\n                             </Button.Group>\n                         </Fragment>\n                        \n                        }\n                    </Grid.Column>\n\n                </Grid>\n\n                <Divider/>\n                <UserPhotos photos={photos} profile={profile} \n                   handleDeletingPhoto={handleDeletingPhoto}\n                   handleSettingMainPhoto={handleSettingMainPhoto}/>\n            </Segment>\n        );\n}\nconst query = ({auth}) => {\n  return [{\n    collection : 'users',\n    doc : auth.uid,\n    subcollections : [{collection : 'photos'}],\n    storeAs : 'photos'\n  }]\n}\nconst mapStateToProps = state => {\n  return {\n    auth : state.firebase.auth,\n    photos : state.firestore.ordered.photos,\n    profile : state.firebase.profile\n  }\n}\nexport default compose(connect(mapStateToProps,{uploadProfileImage, deletePhoto, setMainPhoto}),\n          firestoreConnect(auth => query(auth)))(MyPhotos);","import React, {Fragment} from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button,  Header, Image, Item, Label, Segment } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { addAttendee, cancelMyPlace } from '../../store/actions/eventsAction';\nimport { format } from 'date-fns';\nimport { objectToArray } from '../../util/helpers/helpers';\nclass EventHeader extends React.Component {\n   renderJoinManageButton = () => {\n    const {event, userId} = this.props;\n    // if (event.isCancelled) {\n    //   return (\n    //     <Segment attached=\"bottom\">\n    //       <Label size=\"large\" color=\"red\">The Event Was Cancelled</Label>\n    //     </Segment>\n    //   )\n    // }\n    if (event.hostedUid === userId) {\n      return (\n        <Segment attached=\"bottom\" clearing>\n        <Button \n        as={Link} to={`/manageEvent/${event.id}`}\n        color=\"orange\" floated=\"right\">\n          Manage Event\n        </Button>\n        </Segment>\n      )\n    }else {\n      const attendees = objectToArray(event.attendees);\n      const isGoing = attendees && attendees.some((attendee) => attendee.id === userId);\n      return (\n        <Segment attached=\"bottom\">\n          {isGoing && !event.isCancelled &&\n          <Button onClick={()=>this.props.cancelMyPlace(event)}>Cancel My Place</Button>}\n          {!isGoing && !event.isCancelled &&\n          <Button color=\"teal\"\n            onClick = {()=>this.props.addAttendee(event)}\n          >JOIN THIS EVENT</Button>} \n           {event.isCancelled && <Label size=\"large\" color=\"red\">The Event Was Cancelled</Label>}\n        </Segment>\n      )\n    }\n     \n   }\n    render() {\n      const eventImageStyle = {\n          filter: 'brightness(30%)'\n      };\n      \n      const eventImageTextStyle = {\n          position: 'absolute',\n          bottom: '5%',\n          left: '5%',\n          width: '100%',\n          height: 'auto',\n          color: 'white'\n      };\n      const {event, userId} = this.props;\n        return (\n             <Segment.Group>\n                <Segment basic attached=\"top\" style={{ padding: '0' }}>\n                  <Image src=\"/assets/categoryImages/drinks.jpg\" fluid style={eventImageStyle} />\n          \n                  <Segment basic style={eventImageTextStyle}>\n                    <Item.Group>\n                      <Item>\n                        <Item.Content>\n                          <Header\n                                                   \n                            size=\"huge\"\n                            content={event.title}\n                            style={{ color: 'white' }}\n                          />\n                          \n                          <p>{format(event.date.toDate(),'EEEE do LLLL')}</p>\n                          <p>\n                            Hosted by <strong>{event.hostedBy}</strong>\n                          </p>\n                        </Item.Content>\n                      </Item>\n                    </Item.Group>\n                  </Segment>\n                </Segment>\n                  {this.renderJoinManageButton()}\n              </Segment.Group>\n        )\n    }\n}\nconst mapStateToProps = state => {\n  return {\n    userId : state.firebase.auth.uid\n  }\n}\nexport default connect(mapStateToProps, {addAttendee, cancelMyPlace})(EventHeader);","import React from 'react';\nimport { Segment, Icon, Button, Grid } from 'semantic-ui-react';\nimport { format } from 'date-fns';\nclass EventAbout extends React.Component {\n    render() {\n        const { event } = this.props;\n        \n        return (\n               <Segment.Group>\n                  <Segment attached=\"top\">\n                    <Grid>\n                      <Grid.Column width={1}>\n                        <Icon size=\"large\" color=\"teal\" name=\"info\" />\n                      </Grid.Column>\n                      <Grid.Column width={15}>\n                         <p>{event.description}</p>\n                         \n                         {/* <p>event description</p> */}\n                      </Grid.Column>\n                    </Grid>\n                  </Segment>\n                  <Segment attached>\n                    <Grid verticalAlign=\"middle\">\n                      <Grid.Column width={1}>\n                        <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n                      </Grid.Column>\n                      <Grid.Column width={15}>\n                        <span>{format(event.date.toDate(), 'EEEE do LLLL')}</span>\n                        {/* <span>event date</span> */}\n                      </Grid.Column>\n                    </Grid>\n                  </Segment>\n                  <Segment attached>\n                    <Grid verticalAlign=\"middle\">\n                      <Grid.Column width={1}>\n                        <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n                      </Grid.Column>\n                      <Grid.Column width={11}>\n                        <span>{event.address}</span>\n                      </Grid.Column>\n                      <Grid.Column width={4}>\n                        <Button color=\"teal\" size=\"tiny\" content=\"Show Map\" />\n                      </Grid.Column>\n                    </Grid>\n                  </Segment>\n                </Segment.Group>\n        )\n    }\n}\nexport default EventAbout;","import React, { Fragment } from 'react';\nimport { Button, Comment, Form, Header, Segment } from 'semantic-ui-react';\nclass EventChat extends React.Component {\n    render() {\n        return (\n                <Fragment>\n                  <Segment\n                    textAlign=\"center\"\n                    attached=\"top\"\n                    inverted\n                    color=\"teal\"\n                    style={{ border: 'none' }}\n                  >\n                    <Header>Chat about this event</Header>\n                  </Segment>\n            \n                  <Segment attached>\n                    <Comment.Group>\n                      <Comment>\n                        <Comment.Avatar src=\"/assets/user.png\" />\n                        <Comment.Content>\n                          <Comment.Author as=\"a\">Matt</Comment.Author>\n                          <Comment.Metadata>\n                            <div>Today at 5:42PM</div>\n                          </Comment.Metadata>\n                          <Comment.Text>How artistic!</Comment.Text>\n                          <Comment.Actions>\n                            <Comment.Action>Reply</Comment.Action>\n                          </Comment.Actions>\n                        </Comment.Content>\n                      </Comment>\n            \n                      <Comment>\n                        <Comment.Avatar src=\"/assets/user.png\" />\n                        <Comment.Content>\n                          <Comment.Author as=\"a\">Elliot Fu</Comment.Author>\n                          <Comment.Metadata>\n                            <div>Yesterday at 12:30AM</div>\n                          </Comment.Metadata>\n                          <Comment.Text>\n                            <p>\n                              This has been very useful for my research. Thanks as well!\n                            </p>\n                          </Comment.Text>\n                          <Comment.Actions>\n                            <Comment.Action>Reply</Comment.Action>\n                          </Comment.Actions>\n                        </Comment.Content>\n                        <Comment.Group>\n                          <Comment>\n                            <Comment.Avatar src=\"/assets/user.png\" />\n                            <Comment.Content>\n                              <Comment.Author as=\"a\">Jenny Hess</Comment.Author>\n                              <Comment.Metadata>\n                                <div>Just now</div>\n                              </Comment.Metadata>\n                              <Comment.Text>Elliot you are always so right :)</Comment.Text>\n                              <Comment.Actions>\n                                <Comment.Action>Reply</Comment.Action>\n                              </Comment.Actions>\n                            </Comment.Content>\n                          </Comment>\n                        </Comment.Group>\n                      </Comment>\n            \n                      <Comment>\n                        <Comment.Avatar src=\"/assets/user.png\" />\n                        <Comment.Content>\n                          <Comment.Author as=\"a\">Joe Henderson</Comment.Author>\n                          <Comment.Metadata>\n                            <div>5 days ago</div>\n                          </Comment.Metadata>\n                          <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\n                          <Comment.Actions>\n                            <Comment.Action>Reply</Comment.Action>\n                          </Comment.Actions>\n                        </Comment.Content>\n                      </Comment>\n            \n                      <Form reply>\n                        <Form.TextArea />\n                        <Button\n                          content=\"Add Reply\"\n                          labelPosition=\"left\"\n                          icon=\"edit\"\n                          primary\n                        />\n                      </Form>\n                    </Comment.Group>\n                  </Segment>\n                </Fragment>\n        )\n    }\n}\nexport default EventChat;","import React, { Fragment } from 'react';\nimport { Item, Label, Segment } from 'semantic-ui-react';\nimport { objectToArray } from '../../util/helpers/helpers';\nimport {Link} from 'react-router-dom';\nclass EventSidebar extends React.Component {\n    render() {\n        const { event } = this.props;\n        \n        const attendees = objectToArray(event.attendees); \n        return (\n               <Fragment>\n                 <Segment\n                   textAlign='center'\n                   style={{ border: 'none' }}\n                   attached='top'\n                   secondary\n                   inverted\n                   color='teal'\n                 >\n                   {attendees && attendees.length} {attendees.length == 1 ? 'person' : 'people'} going\n                 </Segment>\n                  {attendees.map(attendee =>{\n                     return (\n                        <Segment attached>\n                        <Item.Group divided>\n                          <Item style={{ position: 'relative' }}>\n                            {attendee.host == true &&\n                            <Label\n                              style={{ position: 'absolute' }}\n                              color='orange'\n                              ribbon='right'\n                            >\n                              Host\n                            </Label>}\n                            <Item.Image size='tiny' src={attendee.photoURL} />\n                            <Item.Content verticalAlign='middle'>\n                              <Item.Header as='h3'><Link to={`/profile/${attendee.id}`}>\n                                {attendee.displayName}</Link></Item.Header>\n                            </Item.Content>\n                          </Item>\n                        </Item.Group>\n                      </Segment>\n                     ) \n                  })} \n                \n               </Fragment>\n            )\n    }\n}\nexport default EventSidebar;","import React from 'react';\nimport { Segment, Button, Header, Icon } from 'semantic-ui-react';\nimport {withRouter} from 'react-router-dom';\nconst NotFound = ({ history }) => {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name='search' />\n        Oops - we've looked everywhere but couldn't find this.\n      </Header>\n      <Segment.Inline>\n        <Button onClick={() => history.push('/dashboard')} primary>\n          Return to Events page\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n};\n\nexport default withRouter(NotFound);\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport EventHeader from './EventHeader';\nimport EventAbout from './EventAbout';\nimport EventChat from './EventChat';\nimport EventSidebar from './EventSidebar';\nimport { connect } from 'react-redux';\nimport { firestoreConnect, withFirestore } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport NotFound from \"../layout/NotFound\";\nclass EventDetailed extends React.Component {\n  // async componentDidMount() {\n  //   try {\n  //   let event = await this.props.firestore.get(`events/${this.props.match.params.id}`);\n  //   } catch(error) {\n  //     console.log(error);\n  //   } \n  // }\n  async componentDidMount() {\n    let eventId = this.props.match.params.id;\n    let event =  await this.props.firestore.setListener(`events/${eventId}`);\n    \n  }\n  async componentWillUnmount() {\n    let eventId = this.props.match.params.id;\n    await this.props.firestore.unsetListener(`events/${eventId}`);\n  }\n  render() {\n         const { event } = this.props;\n       if (Object.keys(event).length === 0) return <NotFound />\n                 \n        return (\n         <Grid>\n              <Grid.Column width={10}>\n                <EventHeader event={event} />\n                <EventAbout event={event}/>\n                <EventChat />\n             </Grid.Column>\n             <Grid.Column width={6}>\n                 <EventSidebar event={event}/>\n             </Grid.Column> \n            \n          </Grid> \n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => {\n  const eventId = ownProps.match.params.id;\n   let event = {};\n   \n     \n   if (state.firestore.ordered.events && state.firestore.ordered.events.length > 0) {\n     event = state.firestore.ordered.events.filter(elem => elem.id === eventId)[0] || {};\n   }\n   return {\n      event\n   }\n}\nexport default compose(\n  withFirestore,\n  connect(mapStateToProps))\n  (EventDetailed)\n","import { Grid, Segment, Header, List, Item, Icon} from 'semantic-ui-react';\nimport { format } from 'date-fns';\n\nconst ProfileInfoDesc = ({profile}) => {\n    console.log(profile);\n    return (\n        <Grid.Column width={12}>\n        <Segment>\n            <Grid columns={2}>\n                <Grid.Column width={10}>\n                    <Header icon='smile' content='About Display Name'/>\n                    <p>I am a: <strong>{profile.occupation}</strong></p>\n                    <p>Originally from <strong>{profile.city}</strong></p>\n                    {/* <p>Member Since: <strong>{format(profile.createdAt.toDate(),'EEEE do LLLL')}</strong></p> */}\n                    <p>{profile.about}</p>\n\n                </Grid.Column>\n                <Grid.Column width={6}>\n\n                    <Header icon='heart outline' content='Interests'/>\n                    <List>\n                        {profile.interests && profile.interests.map((interest, index) => {\n                            return (\n                        <Item key={index}>\n                            <Icon name='heart'/>\n                            <Item.Content>{interest}</Item.Content>\n                        </Item>\n                            )\n                        })}\n                       \n                    </List>\n                </Grid.Column>\n            </Grid>\n\n        </Segment>\n    </Grid.Column>\n    )\n}\nexport default ProfileInfoDesc;","\nimport { Grid, Segment, Header, Menu, Card, Image } from 'semantic-ui-react';\nconst ProfileInfoEvents = () => {\n    return (\n        <Grid.Column width={12}>\n        <Segment attached>\n            <Header icon='calendar' content='Events'/>\n            <Menu secondary pointing>\n                <Menu.Item name='All Events' active/>\n                <Menu.Item name='Past Events'/>\n                <Menu.Item name='Future Events'/>\n                <Menu.Item name='Events Hosted'/>\n            </Menu>\n\n            <Card.Group itemsPerRow={5}>\n\n                <Card>\n                    <Image src={'/assets/categoryImages/drinks.jpg'}/>\n                    <Card.Content>\n                        <Card.Header textAlign='center'>\n                            Event Title\n                        </Card.Header>\n                        <Card.Meta textAlign='center'>\n                            28th March 2018 at 10:00 PM\n                        </Card.Meta>\n                    </Card.Content>\n                </Card>\n\n                <Card>\n                    <Image src={'/assets/categoryImages/drinks.jpg'}/>\n                    <Card.Content>\n                        <Card.Header textAlign='center'>\n                            Event Title\n                        </Card.Header>\n                        <Card.Meta textAlign='center'>\n                            28th March 2018 at 10:00 PM\n                        </Card.Meta>\n                    </Card.Content>\n                </Card>\n\n            </Card.Group>\n        </Segment>\n    </Grid.Column>\n    )\n}\nexport default ProfileInfoEvents","import { Grid, Segment, Item, Header} from 'semantic-ui-react';\nconst ProfileInfoHeader = ({profile}) => {\n    return (\n        <Grid.Column width={16}>\n        <Segment>\n        <Item.Group>\n            <Item>\n                <Item.Image avatar size='small' src={profile.photoURL}/>\n                <Item.Content verticalAlign='bottom'>\n                    <Header as='h1'>{profile.displayName}</Header>\n                    <br/>\n                    <Header as='h3'>{profile.occupation}</Header>\n                    <br/>\n                    <Header as='h3'>Lives in {profile.city}</Header>\n                </Item.Content>\n            </Item>\n        </Item.Group>\n\n    </Segment>\n    </Grid.Column>\n    )\n}\nexport default ProfileInfoHeader;","import { Grid, Segment, Header, Image } from 'semantic-ui-react';\nconst ProfileInfoPhotos = ({photos}) => {\n    return (\n      \n        <Grid.Column width={12}>\n        <Segment attached>\n            <Header icon='image' content='Photos'/>\n            \n            <Image.Group size='small'>\n                {photos.length > 0 && \n                   photos.map(photo => {\n                       return (\n                           <Image key={photo.id} src={photo.url} />\n                       )\n                   })\n                }\n\n            </Image.Group>\n        </Segment>\n    </Grid.Column>\n    )\n}\nexport default ProfileInfoPhotos;","import { Grid, Segment, Button } from 'semantic-ui-react';\nconst ProfileInfoSidebar = () => {\n    return (\n        <Grid.Column width={4}>\n        <Segment>\n            <Button color='teal' fluid basic content='Edit Profile'/>\n        </Segment>\n    </Grid.Column>\n    )\n}\nexport default ProfileInfoSidebar;","import React, {Component} from 'react';\nimport {Button, Card, Grid, Header, Icon, Image, Item, List, Menu, Segment} from \"semantic-ui-react\";\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ProfileInfoDesc from './ProfileInfoDesc';\nimport ProfileInfoEvents from './ProfileInfoEvents';\nimport  ProfileInfoHeader  from './ProfileInfoHeader';\nimport ProfileInfoPhotos from './ProfileInfoPhotos';\nimport ProfileInfoSidebar from './ProfileInfoSidebar';\nimport { firestoreConnect, isEmpty } from 'react-redux-firebase';\n\nconst mapStateToProps = (state, ownProps) => {\n    let profile = {};\n    let userUid = null;\n    if (ownProps.match.params.id === state.firebase.auth.uid) {\n        profile = state.firebase.profile;\n         \n    } else {\n        profile = !isEmpty(state.firestore.ordered.profile) && state.firestore.ordered.profile[0];\n        userUid = ownProps.match.params.id;\n    }\n    return {\n       auth : state.firebase.auth,\n       userUid,\n       profile,\n       photos : state.firestore.ordered.photos     \n    }\n\n}\nclass ProfileInfo extends Component {\n    render() {\n      const {profile, auth, photos} = this.props;\n      \n        return (\n            <Grid>\n              \n                <ProfileInfoHeader profile={profile}/>\n                <ProfileInfoDesc profile={profile}/>\n                <ProfileInfoSidebar />\n                {photos && photos.length > 0 &&\n                <ProfileInfoPhotos photos={photos}/>}\n                <ProfileInfoEvents />\n            </Grid>\n\n        );\n    }\n}\nconst query = ({auth, userUid}) => {\n    if (userUid !== null) {\n        return [\n            {\n            collection : 'users',\n            doc : userUid,\n            storeAs : 'profile'\n        },\n        {\n            collection : 'users',\n            doc : userUid,\n            subcollections : [{collection : 'photos'}],\n            storeAs : 'photos'\n        }];\n    } else {\n    return [\n        {\n            collection : 'users',\n            doc : auth.uid,\n            subcollections : [{collection : 'photos'}],\n            storeAs : 'photos'\n        }\n    ]\n}\n}\n\nexport default compose(\n    connect(mapStateToProps), \n    firestoreConnect((auth, userUid) => query(auth, userUid))\n    )(ProfileInfo);","import React, { Fragment } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Grid, Header, Menu } from 'semantic-ui-react';\nconst SettingNav = () => {\n    return (\n            <Fragment>\n              <Menu vertical>\n                <Header icon=\"user\" attached inverted color=\"grey\" content=\"Profile\" />\n                <Menu.Item as={NavLink} to='/settings/basic'>Basics</Menu.Item>\n                <Menu.Item as={NavLink} to='/settings/about'>About Me</Menu.Item>\n                <Menu.Item as={NavLink} to='/settings/photo'>My Photos</Menu.Item>\n              </Menu>\n              <Grid.Row />\n              <Menu vertical>\n                <Header\n                  icon=\"settings\"\n                  attached\n                  inverted\n                  color=\"grey\"\n                  content=\"Account\"\n                />\n                <Menu.Item as={NavLink} to='/settings/account'>My Account</Menu.Item>\n              </Menu>\n            </Fragment>\n    )\n}\nexport default SettingNav;","import React from 'react';\nimport { Segment, Header, Form, Divider, Label, Button, Icon } from 'semantic-ui-react';\nimport { Field, reduxForm } from 'redux-form';\nimport TextInput from '../../util/form/TextInput';\nimport { composeValidators,combineValidators,isRequired, matchesField } from 'revalidate';\n\nconst validate = combineValidators({\n  newPassword1 : isRequired({message:'please enter a new password'}),\n  newPassword2 : composeValidators(\n    isRequired({message : 'please enter your new password'}),\n    matchesField('newPassword1')({\n      message: 'Passwords do not match'\n    })\n    \n    )()\n})\n\nconst Account = ({ error, handleSubmit, updatePassword, providerId, pristine, submitting }) => {\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"Account\" />\n       {providerId == 'password' &&\n      <div>\n        <Header color=\"teal\" sub content=\"Change password\" />\n        <p>Use this form to update your account settings</p>\n        <Form onSubmit={handleSubmit(updatePassword)}>\n          <Field\n            width={8}\n            name=\"newPassword1\"\n            type=\"password\"\n            pointing=\"left\"\n            inline={true}\n            component={TextInput}\n            basic={true}\n            placeholder=\"New Password\"\n          />\n          <Field\n            width={8}\n            name=\"newPassword2\"\n            type=\"password\"\n            inline={true}\n            basic={true}\n            pointing=\"left\"\n            component={TextInput}\n            placeholder=\"Confirm Password\"\n          />\n          {error && (\n            <Label basic color=\"red\">\n              {error}\n            </Label>\n          )}\n          <Divider />\n          <Button size=\"large\" positive content=\"Update Password\" disabled={pristine || submitting}/>\n        </Form>\n      </div>}\n      {providerId == 'facebook.com' &&\n\n      <div>\n        <Header color=\"teal\" sub content=\"Facebook Account\" />\n        <p>Please visit Facebook to update your account settings</p>\n        <Button type=\"button\" color=\"facebook\">\n          <Icon name=\"facebook\" />\n          Go to Facebook\n        </Button>\n      </div>\n}\n{providerId == 'google.com' &&\n\n      <div>\n        <Header color=\"teal\" sub content=\"Google Account\" />\n        <p>Please visit Google to update your account settings</p>\n        <Button type=\"button\" color=\"google plus\">\n          <Icon name=\"google plus\" />\n          Go to Google\n        </Button>\n      </div>\n}\n    </Segment>\n\n  );\n};\n\nexport default reduxForm({ form: 'account' , validate})(Account);","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { Route } from \"react-router-dom\";\nimport SettingNav from './SettingNav';\nimport Basic from './Basic';\nimport MyPhotos from './MyPhotos';\nimport AboutMe from './AboutMe';\nimport Account from './Account';\nimport {updatePassword} from '../../store/actions/authActions';\nimport {updateProfile} from '../../store/actions/userAction';\nimport { connect } from 'react-redux';\nclass DashboardSetting extends React.Component {\n    render() {\n        return (\n           <Grid>\n               <Grid.Column width={12}>\n                  <Route path='/settings/basic' render={()=> <Basic initialValues={this.props.profile}/>} />\n                  <Route path='/settings/about' render={() => <AboutMe updateProfile={this.props.updateProfile}/> }/> \n                  <Route path='/settings/photo' component={MyPhotos} />\n                  <Route path='/settings/account' render={()=><Account updatePassword={this.props.updatePassword}\n                    providerId = {this.props.providerId}\n                    />} />\n\n\n               </Grid.Column>\n               <Grid.Column width={4}>\n                  <SettingNav />\n               </Grid.Column>\n           </Grid>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        providerId :  state.firebase.auth.providerData[0].providerId,\n        profile : state.firebase.profile\n    }\n}\nexport default connect(mapStateToProps,{updatePassword, updateProfile})(DashboardSetting);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Header, Icon, Image, Segment } from 'semantic-ui-react';\nimport Dashboard from './Dashboard';\nclass Revents extends React.Component {\n    render() {\n        return (\n                <Segment inverted textAlign='center' vertical className='masthead'>\n                <Container text>\n                  <Header  as='h1' inverted>\n                    <Image\n                      size='massive'\n                      src='/assets/logo.png'\n                      alt='logo'\n                      style={{ marginBottom: 12 }}\n                    />\n                    Re-vents\n                  </Header>\n                  <Button size='huge' inverted as={Link} to='/dashboard'>\n                    Get started\n                    <Icon name='right arrow' inverted />\n                  </Button>\n                </Container>\n              </Segment>\n        )\n    }\n}\nexport default Revents;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {openModal} from '../modals/modalsAction';\nclass Test extends React.Component {\n    render() {\n        return (\n           <button onClick={()=>this.props.openModal('TestModal')}>click here</button>\n        )\n    }\n}\nexport default connect(null,{openModal})(Test);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {closeModal} from './modalsAction';\nimport { Modal } from 'semantic-ui-react';\n\nconst TestModal = (props) => {\n    return (\n        <Modal closeIcon=\"close\" open={true} onClose={()=>props.closeModal()}>\n        <Modal.Header>Test Modal</Modal.Header>\n        <Modal.Content>\n          <Modal.Description>\n            <p>Test Modal... nothing to see here</p>\n          </Modal.Description>\n        </Modal.Content>\n      </Modal>\n    )\n}\nexport default connect(null,{closeModal})(TestModal)","import { Button, Icon } from 'semantic-ui-react';\nimport { socialLogin } from '../../store/actions/authActions';\nimport { connect } from 'react-redux';\nconst SocialLogin = (props) => {\n    return (\n        <div>\n          <Button type=\"button\" style={{ marginBottom: '10px' }} fluid color=\"facebook\" onClick={()=>props.socialLogin('facebook')}>\n            <Icon name=\"facebook\" /> Login with Facebook\n          </Button>\n    \n          <Button type=\"button\" fluid color=\"google plus\" onClick={()=>props.socialLogin('google')}>\n            <Icon name=\"google plus\" />\n            Login with Google\n          </Button>\n        </div>\n    )\n}\nexport default connect(null,{socialLogin})(SocialLogin);","import React from 'react';\nimport {reduxForm , Field} from 'redux-form'\nimport { Form, Segment, Button, Label, Divider } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport TextInput from '../../util/form/TextInput';\nimport { logIn } from '../../store/actions/authActions';\nimport { compose } from 'redux';\nimport SocialLogin from './SocialLogin';\nconst LoginForm = (props) => {\n  return (\n    <Form error size=\"large\" onSubmit={props.handleSubmit(props.logIn)}>\n      <Segment>\n        <Field\n          name=\"email\"\n          component={TextInput}\n          type=\"text\"\n          placeholder=\"Email Address\"\n        />\n        <Field\n          name=\"password\"\n          component={TextInput}\n          type=\"password\"\n          placeholder=\"password\"\n        />\n        {props.error && <Label basic color='red'>{props.error}</Label>}\n        <Button fluid size=\"large\" color=\"teal\">\n          Login\n        </Button>\n     \n      </Segment>\n      <Divider horizontal>Or</Divider>\n      <SocialLogin />\n    </Form>\n  );\n};\n\nexport default compose(connect(null,{logIn}),reduxForm({form:'LoginForm'}))(LoginForm);","import React, {Component} from 'react';\nimport {Modal} from 'semantic-ui-react';\nimport {connect} from 'react-redux';\nimport LoginForm from '../components/auth/LoginForm';\nimport {closeModal} from './modalsAction';\nconst actions = {closeModal};\n\nclass LoginModal extends Component {\n    render() {\n        return (\n            <Modal\n                size='mini'\n                open={true}\n                onClose={this.props.closeModal}\n            >\n                <Modal.Header>\n                    Login to Re-vents\n                </Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        <LoginForm />\n                    </Modal.Description>\n                </Modal.Content>\n            </Modal>\n        );\n    }\n}\n\nexport default connect(null, actions)(LoginModal);","import React from 'react';\nimport { Form, Segment, Button, Label, Divider } from 'semantic-ui-react';\nimport { Field } from 'redux-form';\nimport { reduxForm } from 'redux-form';\nimport TextInput from '../../util/form/TextArea';\nimport { signIn } from '../../store/actions/authActions';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport SocialLogin from './SocialLogin';\n\n\nconst RegisterForm = (props) => {\n  return (\n    <div>\n      <Form size=\"large\" onSubmit={props.handleSubmit(props.signIn)}>\n        <Segment>\n          <Field\n            name=\"displayName\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Known As\"\n          />\n          <Field\n            name=\"email\"\n            type=\"text\"\n            component={TextInput}\n            placeholder=\"Email\"\n          />\n          <Field\n            name=\"password\"\n            type=\"password\"\n            component={TextInput}\n            placeholder=\"Password\"\n          />\n          {props.error && <Label basic color='red'>{props.error}</Label>} \n          <Button fluid size=\"large\" color=\"teal\">\n            Register\n          </Button>\n        </Segment>\n        <Divider horizontal>Or</Divider>\n        <SocialLogin />\n      </Form>\n    </div>\n  );\n};\n\nexport default compose(connect(null,{signIn}),reduxForm({form:'registerForm'}))(RegisterForm);","import React, {Component} from 'react';\nimport {Modal} from 'semantic-ui-react';\nimport {connect} from 'react-redux';        \nimport {closeModal} from \"./modalsAction\";\nimport RegisterForm from \"../components/auth/RegisterForm\";\n        \nconst actions = {closeModal};\n        \nclass RegisterModal extends Component {\n    render() {\n        return (\n            <Modal\n                size='mini'\n                open={true}\n                onClose={this.props.closeModal}\n            >\n                <Modal.Header>\n                    Sign Up to Re-vents!\n                </Modal.Header>\n                <Modal.Content>\n                    <Modal.Description>\n                        <RegisterForm />\n                    </Modal.Description>\n                </Modal.Content>\n            </Modal>\n        );\n    }\n}\n        \nexport default connect(null, actions)(RegisterModal);","import React from 'react';\nimport {connect} from 'react-redux';\nimport TestModal from './TestModal';\nimport LoginModal from './LoginModal';\nimport RegisterModal from './RegisterModal';\nclass ModalsManager extends React.Component {\n    render() {\n    const modalsLookup = {\n        TestModal,\n        LoginModal,\n        RegisterModal\n    }\n    let renderedModal;\n    if (this.props.currentModal) {\n        const ModalComponent = modalsLookup[this.props.currentModal.modalType];\n        renderedModal = <ModalComponent {...this.props.currentModal.modalProps}/>\n    }\n    return (\n        <span>\n            {renderedModal}\n        </span>\n    )\n}\n}\nconst mapStateToProps = state => {\n    return {\n        currentModal : state.modals\n    }\n}\nexport default connect(mapStateToProps)(ModalsManager)","import React, { Fragment } from 'react';\nimport { BrowserRouter, Switch, Route, withRouter } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Basic from './components/settings/Basic';\nimport AboutMe from './components/settings/AboutMe';\nimport MyPhotos from './components/settings/MyPhotos';\nimport CreateEvent from './components/events/createEvent';\nimport EventDetailed from './components/eventDetailed/EventDetailed';\nimport ProfileInfo from './components/profiles/ProfileInfo';\nimport DashboardSetting from './components/settings/DashboardSetting';\nimport Revents from './components/dashboard/Revents';\nimport Test from './test/Test';\nimport { Container } from 'semantic-ui-react';\nimport ModalsManager from './modals/ModalsManager';\nimport NotFound from './components/layout/NotFound';\nclass App extends React.Component {\n  render() {\n  return (\n    <Fragment>\n\n        <ModalsManager />\n        <Route exact path='/' component={Revents} />\n        <Route path='/(.+)' render={()=>(\n          <Fragment>\n            \n            <Navbar />\n            <Container className='main'>\n            <Switch key={this.props.location.key}>\n              <Route path='/Dashboard' component={Dashboard} />\n              <Route path='/test' component={Test} />\n              <Route path='/settings' component={DashboardSetting} />\n              <Route path={['/createEvent','/manageEvent/:id']} component={CreateEvent} />\n              <Route path='/events/:id' component={EventDetailed} />\n              <Route path='/profile/:id' component={ProfileInfo} />\n              <Route component={NotFound} />\n            </Switch>\n           </Container>\n           \n         </Fragment>\n        )} />\n    \n    </Fragment>\n  );\n  }\n}\n\nexport default withRouter(App);\n","import cuid from \"cuid\";\nimport EventsList from \"../../components/events/EventsList\";\n\nconst initalState = []\nexport  const eventReducer = (state = initalState, action) => {\n    switch (action.type) {\n        case 'ADD_EVENT':\n            // const event = {...action.payload,\n            // id : cuid(),\n            // authId : cuid(),\n            // authPhoto : 'https://randomuser.me/api/portraits/women/84.jpg',\n            // authName : 'Ibrahim',\n            // attendee : []      \n        \n            return [...state, action.payload]\n            break;\n        case 'DELETE_EVENT':\n           return [...state.filter(elem =>elem.id != action.payload)]\n           break;\n        case 'UPDATE_EVENT' : \n            return [...state.map(elem => elem.id == action.payload.id ? action.payload : elem)];\n            break;\n        default:\n            return state;\n            break;\n    }\n   \n} ","import { combineReducers } from \"redux\";\nimport { reducer as formReducer } from 'redux-form';\nimport {eventReducer} from \"./eventsReducer\";\nimport {modalsReducer} from '../../modals/modalsReducer';\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from 'redux-firestore';\nimport {reducer as toastrReducer} from 'react-redux-toastr';\nimport asyncReducer from '../../async/asyncReducer';\n\nexport default combineReducers({\n    firestore : firestoreReducer,\n    firebase : firebaseReducer,\n    events : eventReducer,\n    form : formReducer,\n    modals : modalsReducer,\n    toastr: toastrReducer,\n    async : asyncReducer\n})","export const modalsReducer = (state = null, action) => {\n    switch (action.type) {\n        case 'OPEN_MODAL':\n            const  modalType  = action.payload;\n            return { modalType };\n            break;\n        case 'CLOSE_MODAL':\n            return null;\n            break;\n        default:\n            return state;\n            break;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore, compose} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { ReactReduxFirebaseProvider , isLoaded, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './firebase/config/fbConfig';\nimport firebase from 'firebase/app';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport './indexx.css';\nimport reducers from './store/reducers';\nimport { Provider, useSelector } from \"react-redux\";\nimport { BrowserRouter } from 'react-router-dom';\nimport { reduxFirestore,getFirestore, createFirestoreInstance} from 'redux-firestore';\nimport thunk from 'redux-thunk';\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css';\nimport ReduxToastr from 'react-redux-toastr'\n\n\nconst store = createStore(reducers,\n  composeWithDevTools(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(fbConfig)\n      )\n    );\n    const rrfConfig = {\n      userProfile: 'users',\n      useFirestoreForProfile: true,\n      updateProfileOnLogin: false\n    }\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,fbConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n   \n  };\n  function AuthIsLoaded({ children }) {\n    const auth = useSelector(state => state.firebase.auth)\n    if (!isLoaded(auth)) return <div>Loading Screen...</div>;\n        return children\n}\n  ReactDOM.render(\n    <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <BrowserRouter>\n      <AuthIsLoaded>\n        <ReduxToastr \n          position='bottom-right'\n          transitionIn='fadeIn'\n          transitionOut=\"fadeOut\"\n          />\n        <App />\n        </AuthIsLoaded>\n      </BrowserRouter>\n      \n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}